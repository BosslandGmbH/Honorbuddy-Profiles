<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Mage - Frost - Ebonchill ($ShortHash$)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>

<!-- INITORDER COMMENT 
	<InitOrder>
		Perhaps add detection for loading the class hall if player hasn't unlocked this zone yet.
		<Code File="Misc\RunLua" Lua="SetCVar('AutoLootDefault', 1)" />

		<Code File="EnablePlugin" Names="Anti Drown" />
		<Code File="EnablePlugin" Names="Refreshment Detection" />

		<Code File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />

		<LootMobs Value="true" />
		<TargetingDistance Value="45" /> Use LevelBot default
	</InitOrder>
END INITORDER COMMENT -->

	<QuestOrder>
		<!-- Check function status -->
		<Code File="RunCode" Type="Definition">
			<![CDATA[
			private static bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
			private static bool IsStoreProfile(string path) => path.StartsWith("store://");
			private static string Slashify(string path) => IsStoreProfile(path) ? path.Replace(@"\", "/") : path.Replace("/", @"\");

			public __CompiledBatchClass__()
			{
				if (profileFunctionsEnabled == null || profileFunctionsEnabled == false)
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!");
					LoadProfile(@"..\..\..\Functions\Activate Functions.xml");
				}
			}

			private static void LoadProfile(string path)
			{
				var profile = GetNewPath(path);
				if (!IsStoreProfile(profile) && !File.Exists(profile))
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Profile does not exist.\n" + profile);
					return;
				}

				Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Loading: " + profile);
				ProfileManager.LoadNew(profile, false);
			}

			private static string GetNewPath(string path)
			{
				if (IsStoreProfile(path))
					return Slashify(path);

				var currentProfile = ProfileManager.XmlLocation;
				if (IsStoreProfile(currentProfile))
					return Slashify(currentProfile + "/../" + path);

				var absolutePath = Path.Combine(Path.GetDirectoryName(currentProfile), path);
				absolutePath = Path.GetFullPath(absolutePath);
				var canonicalPath = new Uri(absolutePath).LocalPath;
				return Slashify(canonicalPath);
			}]]>
		</Code>
		<!-- END Check function status -->

		<If Condition="Me.IsHorde" >
			<Code File="LoadProfile" ProfileName="..\..\..\1-110 Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Get Continuation Quest -->
		<!-- END Get Continuation Quest -->

		<!-- Second Artifact -->
		<!-- END Second Artifact -->

		<!-- Third Artifact -->
		<!-- END Third Artifact -->

		<!-- Story: Artifact Weapon - Ebonchill -->
			<PickUp QuestName="Finding Ebonchill" QuestId="42452" GiverName="Meryl Felstorm" GiverId="102700" X="-817.0645" Y="4700.291" Z="939.6641" />
			<While Condition="DoQuest(42452)" >
				<Code File="InteractWith" MobIds="250545, 250542, 250549, 250546, 250544" InteractBlacklistTimeInSeconds="15" QuestId="42452" QuestObjectiveIndex="1" X="-811.1928" Y="4689.924" Z="939.6644" />
				<Code File="InteractWith" MobId="102700" GossipOptions="1" QuestId="42452" X="-816.66" Y="4695" Z="939.6641" />
				<Code File="WaitTimer" QuestId="42452" WaitTime="60000" />
			</While>
			<TurnIn QuestName="Finding Ebonchill" QuestId="42452" TurnInName="Meryl Felstorm" TurnInId="102700" X="-816.66" Y="4695" Z="939.6636" />

			<PickUp QuestName="The Deadwind Site" QuestId="42476" GiverName="Meryl Felstorm" GiverId="102700" X="-816.66" Y="4695" Z="939.6636" />
			<PickUp QuestName="Daio the Decrepit" QuestId="42477" GiverName="Meryl Felstorm" GiverId="102700" X="-816.66" Y="4695" Z="939.6636" />
			<PickUp QuestName="Alodi's Gems" QuestId="42455" GiverName="Alodi" GiverId="102846" X="-817.3871" Y="4690.511" Z="939.6633" />

			<While Condition="DoQuest(42455)" >
				<If Condition="Me.MapId == 1513" >  <!-- NOTE: <CheckID> : Leaving Class Hall, entering Dalaran. -->
					<Code File="InteractWith" MobId="244510" WaitTime="3000" X="-832.6424" Y="4685.265" Z="939.9924" />
				</If>
				<DisableBehavior Name="Rest, Combat" />
				<MoveTo QuestId="42455" QuestObjectiveIndex="1" X="-675.4942" Y="4438.937" Z="738.13" />
				<Code File="InteractWith" MobId="107622" GossipOptions="1" QuestId="42455" QuestObjectiveIndex="2" X="-678.44" Y="4443.29" Z="738.13" />
				<Code File="WaitTimer" QuestId="42455" QuestObjectiveIndex="2" WaitTime="25000" />
				<Code File="InteractWith" MobId="250575" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" QuestId="42455" QuestObjectiveIndex="3" X="-673.4809" Y="4420.087" Z="738.1251" />
				<Code File="InteractWith" MobId="250576" NumOfTimes="3" QuestId="42455" QuestObjectiveIndex="4" X="-674.7415" Y="4439.713" Z="694.2416" /> <!-- Hoping CR hits orbs for us. -->
				<Code File="InteractWith" MobId="251105"  X="-689.3663" Y="4452.199" Z="695.6881" /> <!-- NOTE: <AddTermination> : Can shut off if we're out of the vault already. -->
				<EnableBehavior Name="Rest, Combat" />
			</While>

			<While Condition="DoQuest(42476, 42477)" >
				<While Condition="Me.MapId != 0" >
					<If Condition="Me.Z &gt; 605" > <!-- NOTE: <CheckFunction> : Dalaran to Dalaran Portal Room -->
						<MoveTo X="-850.0136" Y="4460.374" Z="735.6611" />
						<Code File="MyCTM" X="-844.5972" Y="4467.76" Z="736.0415" TerminateWhen="Me.Z &lt;= 605" />
					</If>
					<MoveTo X="-872.7674" Y="4501.16" Z="580.1588" />
					<Code File="InteractWith" MobId="246009" InteractBlacklistTimeInSeconds="1" NonCompeteDistance="0" WaitTime="1000" X="-869.9479" Y="4503.124" Z="580.4584" TerminateWhen="Me.ZoneId != 7502" />
				</While>

				<!-- Quest The Deadwind Site -->
				<MoveTo Nav="Fly" QuestId="42476" QuestObjectiveIndex="2" X="-10946.69" Y="-1739.818" Z="146.1448" />
				<Code File="InteractWith" MobId="250602" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" InteractByLooting="true" QuestId="42476" QuestObjectiveIndex="3" X="-10934.02" Y="-1729.155" Z="145.7022" />
				<Code File="InteractWith" MobId="250600" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" InteractByLooting="true" QuestId="42476" QuestObjectiveIndex="4" X="-10908.79" Y="-1708.983" Z="149.6503" />
				<Code File="WaitTimer" QuestId="42476" QuestObjectiveIndex="5" WaitTime="60000" />
				<Code File="InteractWith" MobId="250611" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" MovementBy="NavigatorOnly" InteractByLooting="true" QuestId="42476" QuestObjectiveIndex="6" X="-10861.32" Y="-1686.526" Z="148.2902" />

				<!-- Quest Daio the Decrepit -->
				<MoveTo QuestId="42477" QuestObjectiveIndex="2" X="-11689.76" Y="-2387.85" Z="-0.7187544" />
				<Code QuestId="42477" File="ForcedDismount" />
				<Code File="InteractWith" MobId="107716" GossipOptions="1, 1, 1" QuestId="42477" QuestObjectiveIndex="3" X="-11685.33" Y="-2384.259" Z="-0.1785276" />
				<Code File="KillUntilComplete" MobIds="107740, 107799, 107800" QuestId="42477" />
			</While>

			<If Condition="(HasQuest(42476) || HasQuest(42477) || HasQuest(42455)) &amp;&amp;(IsQuestCompleted(42476) &amp;&amp; IsQuestCompleted(42477) &amp;&amp; IsQuestCompleted(42455)) &amp;&amp; Me.MapId != 1513" > <!-- NOTE: <CheckID> : ID for class hall -->
				<Code File="RunCode" Code="SpellManager.Cast(193759);" />
				<Code File="WaitTimer" WaitTime="10000" TerminateWhen="!Me.IsCasting" />
			</If>

			<If Condition="QuestDone(42455, 42476, 42477)" >
				<MoveTo X="-842.6992" Y="4699.826" Z="939.9926" /> <!-- Avoid trash on the ground -->
				<TurnIn QuestName="Alodi's Gems" QuestId="42455" TurnInName="Alodi" TurnInId="102846" X="-817.3871" Y="4690.511" Z="939.6633" />
				<TurnIn QuestName="The Deadwind Site" QuestId="42476" TurnInName="Meryl Felstorm" TurnInId="102700" X="-816.66" Y="4695" Z="939.6638" />
				<TurnIn QuestName="Daio the Decrepit" QuestId="42477" TurnInName="Meryl Felstorm" TurnInId="102700" X="-816.66" Y="4695" Z="939.6638" />
			</If>

			<PickUp QuestName="The Mage Hunter" QuestId="42479" GiverName="Meryl Felstorm" GiverId="102700" X="-816.66" Y="4695" Z="939.6638" />
			<While Condition="DoQuest(42479)" >
				<If Condition="Me.MapId == 1513" >  <!-- NOTE: <CheckID> : Leaving Class Hall, entering Dalaran. -->
					<Code File="InteractWith" MobId="244510" WaitTime="3000" X="-832.6424" Y="4685.265" Z="939.9924" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 0 &amp;&amp; !HasItem(128862)" >
					<Code File="InteractWith" MobId="96813" NonCompeteDistance="0" GossipOptions="2" WaitTime="3000" QuestId="42479" X="-863.934" Y="4298.434" Z="745.3463" />
					<Code File="WaitTimer" WaitTime="180000" TerminateWhen="!Me.InVehicle" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<Code File="WaitTimer" WaitTime="60000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2" >
					<Code File="InteractWith" MobId="107939" NumOfTimes="3" InteractBlacklistTimeInSeconds="60" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 2" >
						<HuntingGrounds>
							<Hotspot X="-317.2778" Y="7847.715" Z="98.30244" />
							<Hotspot X="-458.2963" Y="7853.967" Z="100.279" />
							<Hotspot X="-347.2014" Y="8066.108" Z="90.82826" />
						</HuntingGrounds>
					</Code>
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<MoveTo X="-418.5313" Y="8008.541" Z="66.65244" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Object(108855) != null" />
					<While Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
						<Code File="InteractWith" MobId="108855" X="-418.6701" Y="8009.128" Z="66.8905" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 3" />
					</While>
				</If>

				<While Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<Code File="InteractWith" MobId="108855" InteractBlacklistTimeInSeconds="1" X="-418.6701" Y="8009.128" Z="66.8905" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 4" />
				</While>


				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<Code File="RunCode" Code="await SkipCutscene();" />
					<Code File="Hooks\DoWhen" ActivityName="Spellsteal" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(215996)" >
						<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
					</Code>

					<!-- NOTE: <AddDoWhen> : Need to spellsteal Quickening off this guy. -->
					<!-- NOTE: <AddAvoid> : Need to avoid his fel attack -->
					<Code File="KillUntilComplete" MobId="108168" X="-4404.424" Y="477.4653" Z="434.3867" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />

					<Code File="Hooks\DoWhen" ActivityName="Spellsteal" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 6" >
					<Code File="InteractWith" MobId="251049" InteractByLooting="true" WaitTime="1500" X="-4384.41" Y="471.0781" Z="436.1095" />
					<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
					<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
				</If>
			</While>
			<If Condition="QuestDone(42479) &amp;&amp; HasItem(128862) &amp;&amp; Me.MapId != 1513" >
				<Code File="MyCTM" X="-4366.955" Y="440.7726" Z="440.7087" TerminateWhen="Me.ZoneId == 7334" /> <!--  TerminateWhen="ME OUT OF AREA -->
				<Code File="InteractWith" MobId="247024" X="-404.3316" Y="8008.815" Z="66.67653" NumOfTimes="9" TerminateWhen="Me.ZoneId != 7334" />
			</If>
			<TurnIn QuestName="The Mage Hunter" QuestId="42479" TurnInName="Meryl Felstorm" TurnInId="102700" X="-798.9618" Y="4702.451" Z="939.9674" />
		<!-- END Story: Artifact Weapon - Ebonchill -->


		<If Condition="!IsQuestCompleted(41125)" >
			<PickUp QuestName="Unlocked Potential" QuestId="41125" GiverName="Meryl Felstorm" GiverId="102700" X="-798.9618" Y="4702.451" Z="939.9673" />
			<!-- We're picking this quest up even though it's not artifact specific as a method of preventing the Class Hall loader from loading another artifact profile. -->
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Mage.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	XXXX is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	XXXX is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->
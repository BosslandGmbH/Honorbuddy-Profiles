<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Priest - Discipline - Light's Wrath ($Rev: 5791 $)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>

<!-- INITORDER COMMENT 
	<InitOrder>
		Perhaps add detection for loading the class hall if player hasn't unlocked this zone yet.
		<Code File="Misc\RunLua" Lua="SetCVar('AutoLootDefault', 1)" />

		<Code File="EnablePlugin" Names="Anti Drown" />
		<Code File="EnablePlugin" Names="Refreshment Detection" />

		<Code File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />

		<LootMobs Value="true" />
		<TargetingDistance Value="45" /> Use LevelBot default
	</InitOrder>
END INITORDER COMMENT -->

	<QuestOrder>
		<!-- Check function status -->
			<Code File="RunCode" Type="Definition" >
				<![CDATA[
					bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
				]]>
			</Code>
			<If Condition="profileFunctionsEnabled == null || profileFunctionsEnabled == false" >
				<Code File="RunCode">
					<![CDATA[ Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!"); ]]>
				</Code>
				<Code File="LoadProfile" ProfileName="..\..\..\Functions\Activate Functions.xml" />
			</If>
		<!-- END Check function status -->

		<If Condition="Me.IsHorde" >
			<Code File="LoadProfile" ProfileName="..\..\..\1-110 Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Lua.DoString("for i=1,GetNumAddOns() do local relo=false if IsAddOnLoaded(i) then relo=true DisableAddOn(i) end if relo then relo=nil ReloadUI() end end");
				await Coroutine.Sleep(1500);
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Get Continuation Quest -->
			<If Condition="IsQuestCompleted(40938) &amp;&amp; NeedsQuest(41625) &amp;&amp; NeedsQuest(43935, 44407)" > <!-- Using The Light and the Void (40938) to determine if we've already got the first artifact.  -->
				<Code File="InteractWith" MobId="110564" WaitTime="1250" X="1333.91" Y="1335.634" Z="177.1372" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="if GossipTitleButton2:IsVisible() then GossipTitleButton2:Click() else GossipTitleButton1:Click() end" />
				<Code File="Misc\RunLua" WaitTime="2000" Lua="QuestFrameAcceptButton:Click();" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="if QuestChoiceFrameOption2.OptionButton:IsVisible() then QuestChoiceFrameOption2.OptionButton:Click() else QuestChoiceFrameOption1.OptionButton:Click() end" />
				<!-- If this isn't our last artifact, then there will be a second dialog box here.  This code is uncommented out to ignore it since this should typically be our last artifact 
					<Code File="Misc\RunLua" WaitTime="1500" Lua="StaticPopup1Button1:Click();" /> -->
				<Code File="Misc\RunLua" WaitTime="1000" Lua="StaticPopup1Button2:Click();" /> <!-- Decline changing specs -->
			</If>
		<!-- END Get Continuation Quest -->

		<!-- Second+Third Artifact -->
			<If Condition="QuestDone(43935, 44407)" >
				<Code File="InteractWith" MobId="110564" WaitTime="1250" X="1333.91" Y="1335.634" Z="177.1372" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="if GossipTitleButton3:IsVisible() then GossipTitleButton3:Click() else GossipTitleButton2:Click() end" />
				<Code File="Misc\RunLua" Lua="QuestFrameCompleteQuestButton:Click();" />
			</If>
		<!-- END Second+Third Artifact -->

		<!-- Story: Artifact Weapon - Light's Wrath -->
			<If Condition="Me.HasAura(213170) &amp;&amp; NeedsQuest(41625)" > <!-- In Class Hall -->
				<PickUp QuestName="The Light's Wrath" QuestId="41625" GiverName="Alonsus Faol" GiverId="110564" X="1333.91" Y="1335.634" Z="177.1372" />
				<Code File="InteractWith" MobId="251677" WaitTime="3000" X="1231.858" Y="1344.203" Z="186.3952" />
			</If>
			<If Condition="!Me.HasAura(213170) &amp;&amp; NeedsQuest(41625)" > <!-- Not In Class Hall -->
				<PickUp QuestName="The Light's Wrath" QuestId="41625" GiverName="Alonsus Faol" GiverId="101314" X="2602.816" Y="-534.5225" Z="89.00004" />
			</If>
			<While Condition="HasQuest(41625) &amp;&amp; Me.MapId == 0" >
				<Code File="RunCode"><![CDATA[
					if (!(Me.ZoneId == 7502 || Me.ZoneId == 8392) && HasItem(140192))
					{
						Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul Navigator]: ", System.Windows.Media.Colors.LightGreen, "Using Dalaran Hearthstone!");
						await CommonCoroutines.LandAndDismount("Using Hearthstone to reach Dalaran (Broken Isles)");
						await CommonCoroutines.StopMoving(); 
						WoWItem dalaranHearth = StyxWoW.Me.BagItems.FirstOrDefault(x => x.Entry == 140192);
						if (dalaranHearth.CooldownTimeLeft != TimeSpan.Zero)
						{
							Logging.Write(System.Windows.Media.Colors.Yellow, "[Profile]: Awaiting cooldown before attempting hearth!");
							await Coroutine.Wait(1206000, () => dalaranHearth.CooldownTimeLeft == TimeSpan.Zero);
						}
						dalaranHearth.Interact();
						var currentLoc = StyxWoW.Me.ZoneId;
						await Coroutine.Wait(30000, () => StyxWoW.Me.ZoneId != currentLoc);
						await Coroutine.Sleep(1500);
					}
				]]>
				</Code>
			</While>
			<TurnIn QuestName="The Light's Wrath" QuestId="41625" TurnInName="Archmage Kalec" TurnInId="105081" X="-857.1511" Y="4637.633" Z="749.2797" />

			<PickUp QuestName="A New Threat" QuestId="41626" GiverName="Archmage Kalec" GiverId="105081" X="-857.1511" Y="4637.633" Z="749.2797" />
			<While Condition="DoQuest(41626)" >
				<If Condition="Me.MapId != 571" >
					<If Condition="Me.Z &gt; 605" > <!-- NOTE: <CheckFunction> : Dalaran to Dalaran Portal Room -->
						<MoveTo X="-850.0136" Y="4460.374" Z="735.6611" />
						<Code File="MyCTM" X="-844.5972" Y="4467.76" Z="736.0415" TerminateWhen="Me.Z &lt;= 605" />
					</If>
					<MoveTo X="-889.3405" Y="4503.787" Z="580.0774" />
					<Code File="InteractWith" MobId="246013" X="-892.7344" Y="4506.432" Z="580.4584" Terminate="Me.MapId == 571" />
					<Code File="WaitTimer" WaitTime="10000" TermianteWhen="Me.MapId == 571" />
				</If>
				<MoveTo QuestId="41626" QuestObjectiveIndex="2" X="3132.267" Y="469.468" Z="21.36447" />
				<Code File="InteractWith" MobIds="104551, 104570, 248375" NumOfTimes="3" QuestId="41626" QuestObjectiveIndex="3" X="3128.747" Y="470.8965" Z="21.08807" />
			</While>
			<TurnIn QuestName="A New Threat" QuestId="41626" TurnInName="Ethereal Communication Device" TurnInType="Object" TurnInId="248398" X="2990.309" Y="447.5851" Z="25.10034" />
			
			<PickUp QuestName="A Forgotten Enemy" QuestId="41627" GiverName="Ethereal Communication Device" GiverId="248398" X="2990.309" Y="447.5851" Z="25.10034" />
			<While Condition="DoQuest(41627)" >
				<Code File="InteractWith" MobId="248476" NonCompeteDistance="0" QuestId="41627" QuestObjectiveIndex="1" X="2990.135" Y="449.8299" Z="25.18106" />
				<Code File="WaitTimer" QuestId="41627" WaitTime="30000" />
			</While>
			<TurnIn QuestName="A Forgotten Enemy" QuestId="41627" />

			<PickUp QuestName="Eyes of the Dragon" QuestId="41628" GiverName="Image of Kalec" />
			<While Condition="DoQuest(41628)" >
				<MoveTo Nav="Fly" QuestId="41628" QuestObjectiveIndex="1" X="3872.739" Y="6914.68" Z="161.2548" />
				<MoveTo Nav="Fly" QuestId="41628" QuestObjectiveIndex="2" X="3834.942" Y="6690.973" Z="264.8541" />
				<MoveTo Nav="Fly" QuestId="41628" QuestObjectiveIndex="3" X="3784.929" Y="6946.786" Z="124.1302" />
			</While>
			<TurnIn QuestName="Eyes of the Dragon" QuestId="41628" />

			<PickUp QuestName="Harnessing the Holy Fire" QuestId="41629" GiverName="Image of Kalec" />
			<While Condition="DoQuest(41629)" >
				<Code File="InteractWith" MobState="Dead" NumOfTimes="100" QuestId="41629" QuestObjectiveIndex="1"  >
					<HuntingGrounds>
						<Hotspot X="3773.632" Y="6999.09" Z="103.5417" />
						<Hotspot X="3794.961" Y="6919.479" Z="103.9532" />
						<Hotspot X="3912.934" Y="6894.695" Z="104.2659" />
						<Hotspot X="3973.733" Y="6983.582" Z="104.0634" />
						<Hotspot X="3883.298" Y="7071.488" Z="104.9635" />
						<Hotspot X="3797.327" Y="7049.583" Z="103.6634" />
					</HuntingGrounds>
					<PursuitList>
						<PursueGameObject Id="104791" /> <!-- NOTE: <CheckMe>: Has internal cast bar, may need to add support for this.. -->
						<PursueUnit Id="104627" PursueWhen="(UNIT.IsAlive || UNIT.Lootable) &amp;&amp; !UNIT.TaggedByOther" />
					</PursuitList>
				</Code>
			</While>
			<TurnIn QuestName="Harnessing the Holy Fire" QuestId="41629" />

			<PickUp QuestName="Unleashing Judgment" QuestId="41630" GiverName="Image of Kalec" />
			<While Condition="DoQuest(41630)" >
				<Code File="InteractWith" MobId="104828" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" QuestId="41630" QuestObjectiveIndex="2" X="3761.105" Y="7179.227" Z="165.1684" />
				<Code File="InteractWith" MobId="104819" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" QuestId="41630" QuestObjectiveIndex="3" X="4113.514" Y="6996.014" Z="168.2267" />
				<Code File="InteractWith" MobId="104826" NonCompeteDistance="0" InteractBlacklistTimeInSeconds="1" QuestId="41630" QuestObjectiveIndex="1" X="3828.431" Y="6685.926" Z="156.2073" />
			</While>
			<TurnIn QuestName="Unleashing Judgment" QuestId="41630" />


			<PickUp QuestName="The Nexus Vault" QuestId="41631" GiverName="Image of Kalec" />
			<While Condition="DoQuest(41631)" >
				<If Condition="Me.MapId != 1583" > <!-- NOTE: <CheckID> : TerminateWhen inside of portal -->
					<MoveTo X="3891.174" Y="6985.424" Z="69.48839" />
					<Code File="MyCTM" X="3904.694" Y="6985.984" Z="69.48815" TerminateWhen="Me.MapId == 1583" /> 
				</If>



				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<Code File="Hooks\DoWhen" ActivityName="DispelMagic" AllowExecutionInCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; (Me.CurrentTarget.HasAura(227731) || Me.CurrentTarget.HasAura(209329) || Me.CurrentTarget.HasAura(209329))" >
						<DisableBehavior Name="Combat" />
						<Code File="RunCode" Code="SpellManager.StopCasting(); SpellManager.Cast(&quot;Dispel Magic&quot;); " />
						<Code File="WaitTimer" WaitTime="650" />
						<EnableBehavior Name="Combat" />
					</Code>

					<Code File="KillUntilComplete" MobIds="106700, 105800, 105801" X="3848.426" Y="7359.914" Z="266.9356" TerminateWhen="IsScenarioCriteriaComplete(1)" />
					<Code File="RunCode"><![CDATA[
							var azuregosPoi = Unit(104832);
							while (azuregosPoi != null && azuregosPoi.HealthPercent < 100)
							{
								azuregosPoi.Target();
								StyxWoW.Me.SetFacing(azuregosPoi.Location);
								await CommonCoroutines.StopMoving();
								SpellManager.Cast(186263);
								await Coroutine.Wait(3000, () => !StyxWoW.Me.IsCasting);
								await Coroutine.Yield();
							}
						]]>
					</Code>

					<Code File="Hooks\DoWhen" ActivityName="DispelMagic" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2" >
					<DisableBehavior Name="Rest" />
					<Code File="Hooks\DoWhen" ActivityName="LevitateSpam" UseWhen="!Me.HasAura(111759) &amp;&amp; SpellManager.CanCast(1706)" >
						<Code File="RunCode" Code="SpellManager.Cast(1706);" />
					</Code>
					<MoveTo X="4067.426" Y="7453.801" Z="267.3105" />
					<DisableBehavior Name="Combat" />
					<Code File="WaitTimer" WaitTime="45000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 2" />
					<Code File="Hooks\DoWhen" ActivityName="LevitateSpam" Command="Remove" />
					<EnableBehavior Name="Rest" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<DisableBehavior Name="Combat" />
					<MoveTo X="4067.734" Y="7453.729" Z="267.3107" />
					<Code File="WaitTimer" WaitTime="30000" TerminateWhen="Unit(104520) != null" /> 
					<Code File="RunCode"><![CDATA[
							var flamePoi = Unit(104520);

							while (flamePoi != null && flamePoi.IsAlive)
							{
								if (!flamePoi.IsPet)
								{
									flamePoi.Target();
									StyxWoW.Me.SetFacing(flamePoi.Location);
									await Coroutine.Sleep(500);
									SpellManager.Cast(605);
									await Coroutine.Wait(3000, () => flamePoi.IsPet);
								}

								if (flamePoi.IsPet)
								{
									if (StyxWoW.Me.KnowsSpell(205367))
									{
										Lua.DoString("PetActionButton6:Click();");
										await Coroutine.Sleep(1700);
									}
									else
									{
										Lua.DoString("ActionButton6:Click();");
										await Coroutine.Sleep(1700);
									}
								}
								await Coroutine.Yield();
							}
						]]>
					</Code>
					<EnableBehavior Name="Combat" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<MoveTo X="4199.186" Y="7416.543" Z="262.6368" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 4" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<While Condition="Me.Location.Distance(new Vector3(4198.772f, 7414.835f, 262.6372f)) &lt;= 20" >
						<Code File="WaitTimer" WaitTime="5000" />
						<Code File="InteractWith" MobId="104546" X="4197.229" Y="7408.315" Z="257.9444" />
						<Code File="WaitTimer" WaitTime="40000" TerminateWhen="Me.IsFalling" />
					</While>
					<Code File="KillUntilComplete" MobId="104502" X="4211.827" Y="7105.71" Z="268.244" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 6" >
					<Code File="InteractWith" MobId="248553" X="4210.876" Y="7089.679" Z="267.5377" TerminateWhen="Me.Z &gt;= 280" />
					<Code File="WaitTimer" WaitTime="30000" TerminateWhen="Me.ManaPercent == 100" />
					<Code File="InteractWith" MobId="104985" X="1117.689" Y="1048.08" Z="311.9431" TerminateWhen="IsScenarioCriteriaComplete(1) || Me.Z &lt; 280" />
					<Code File="WaitTimer" WaitTime="30000" TerminateWhen="Me.IsDead || Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 7" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 7" >
					<MoveTo X="1127.354" Y="1036.032" Z="307.2284" />
					<Code File="InteractWith" MobId="248572" Range="6" MovementBy="ClickToMoveOnly" IgnoreLoSToTarget="true" InteractByLooting="true" WaitTime="1500" X="1117.689" Y="1048.08" Z="311.9431" />
					<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
					<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
					<If Condition="HasItem(128868)" >
						<Code File="InteractWith" MobId="248574" X="1152.585" Y="1002.016" Z="309.2886" TerminateWhen="Me.Z &lt; 280" /> <!-- NOTE: <AddTermination> : Terminate when out of nexus vault -->
					</If>
				</If>
			</While>
			<While Condition="HasItem(128868) &amp;&amp; Me.ZoneId == 8094" >
				<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Object(244510) != null || Me.ZoneId != 8094" />
				<Code File="InteractWith" MobId="244510" WaitTime="3000" X="4210.98" Y="7105.491" Z="268.1987" TerminateWhen="Object(244510) == null" />
			</While>
			<TurnIn QuestName="The Nexus Vault" QuestId="41631" TurnInName="Archmage Kalec" TurnInId="105081" X="-857.1511" Y="4637.633" Z="749.2794" />
		<!-- END Story: Artifact Weapon - Light's Wrath -->


		<PickUp QuestName="A Gift of Time" QuestId="41632" GiverName="Archmage Kalec" GiverId="105081" X="-857.1511" Y="4637.633" Z="749.2794" />
		<If Condition="IsQuestCompleted(40938)" > <!-- Second or Third Artifact -->
			<If Condition="!Me.HasAura(213170)" >
				<If Condition="Me.IsAlliance" >
					<MoveTo X="-898.0295" Y="4552.3" Z="744.436" />
					<Code File="InteractWith" MobId="251306" NonCompeteDistance="0" X="-897.5434" Y="4547.79" Z="744.4398" />
				</If>
				<If Condition="Me.IsHorde" >
					<MoveTo X="-680.4219" Y="4354.915" Z="748.5759" />
					<Code File="InteractWith" MobId="251307" NonCompeteDistance="0" X="-680.4219" Y="4354.915" Z="748.5759" />
				</If>
			</If>
			<TurnIn Nav="Fly" QuestName="A Gift of Time" QuestId="41632" TurnInName="Alonsus Faol" TurnInId="110564" X="1333.91" Y="1335.634" Z="177.1371" />
		</If>

		<If Condition="!IsQuestCompleted(40938)" >
			<TurnIn QuestName="A Gift of Time" QuestId="41632" TurnInName="Alonsus Faol" TurnInId="102363" X="-698.2396" Y="4492.471" Z="728.6259" /> <!-- First artifact. -->
			<PickUp QuestName="The Light and the Void" QuestId="40938" GiverName="Prophet Velen" GiverId="101313" X="-695.5399" Y="4492.624" Z="728.5385" />
			<!-- We're picking this quest up even though it's not artifact specific as a method of preventing the Class Hall loader from loading another artifact profile. -->
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Priest.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	XXXX is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	XXXX is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->
<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Death Knight - Frost - Blades of the Fallen Prince ($ShortHash$)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>



	<QuestOrder>
		<!-- Check function status -->
		<Code File="RunCode" Type="Definition">
			<![CDATA[
			private static bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
			private static bool IsStoreProfile(string path) => path.StartsWith("store://");
			private static string Slashify(string path) => IsStoreProfile(path) ? path.Replace(@"\", "/") : path.Replace("/", @"\");

			public __CompiledBatchClass__()
			{
				if (profileFunctionsEnabled == null || profileFunctionsEnabled == false)
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!");
					LoadProfile(@"..\..\..\Functions\Activate Functions.xml");
				}
			}

			private static void LoadProfile(string path)
			{
				var profile = GetNewPath(path);
				if (!IsStoreProfile(profile) && !File.Exists(profile))
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Profile does not exist.\n" + profile);
					return;
				}

				Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Loading: " + profile);
				ProfileManager.LoadNew(profile, false);
			}

			private static string GetNewPath(string path)
			{
				if (IsStoreProfile(path))
					return Slashify(path);

				var currentProfile = ProfileManager.XmlLocation;
				if (IsStoreProfile(currentProfile))
					return Slashify(currentProfile + "/../" + path);

				var absolutePath = Path.Combine(Path.GetDirectoryName(currentProfile), path);
				absolutePath = Path.GetFullPath(absolutePath);
				var canonicalPath = new Uri(absolutePath).LocalPath;
				return Slashify(canonicalPath);
			}]]>
		</Code>
		<!-- END Check function status -->

		<If Condition="Me.IsHorde" >
			<Code File="LoadProfile" ProfileName="..\..\..\1-110 Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Get Continuation Quest -->
			<If Condition="IsQuestCompleted(39757) &amp;&amp; NeedsQuest(38990) &amp;&amp; NeedsQuest(43962, 44401)" > <!-- Using Grand Master Siegesmith Corvus (39757) to determine if we've already got the first artifact. -->
				<Code File="InteractWith" MobId="109788" WaitTime="1250" X="-1537.278" Y="1016.035" Z="313.6463" />
				<Code File="Misc\RunLua" WaitTime="2000" Lua="QuestFrameAcceptButton:Click();" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="if QuestChoiceFrameOption2.OptionButton:IsVisible() then QuestChoiceFrameOption2.OptionButton:Click() else QuestChoiceFrameOption1.OptionButton:Click() end" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="StaticPopup1Button1:Click();" />
				<Code File="Misc\RunLua" WaitTime="1000" Lua="StaticPopup1Button2:Click();" />
			</If>
		<!-- END Get Continuation Quest -->

		<!-- Second+Third Artifact -->
			<If Condition="QuestDone(43962, 44401)" >
				<Code File="InteractWith" MobId="109788" WaitTime="1250" X="-1537.278" Y="1016.035" Z="313.6463" />
				<Code File="Misc\RunLua" WaitTime="1500" Lua="GossipTitleButton1:Click();" />
				<Code File="Misc\RunLua" Lua="QuestFrameCompleteQuestButton:Click();" />
			</If>
		<!-- END Second+Third Artifact -->

		<!-- Story: Artifact Weapon - Blades of the Fallen Prince -->
			<PickUp QuestName="The Call of Icecrown" QuestId="38990" GiverName="Duke Lankral" GiverId="101441" X="-840.5833" Y="4271.512" Z="746.2618" />
			<While Condition="DoQuest(38990)" >
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 0" >
					<Code File="InteractWith" MobId="95854" WaitTime="3000" QuestId="38990"  X="-838.2668" Y="4270.183" Z="746.5203" />
					<Code File="RunCode" Code="await SkipCutscene();" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<MoveTo X="-554.9478" Y="2211.186" Z="539.3419" />
					<Code File="MyCTM" X="-548.6351" Y="2211.2" Z="539.3441" />
					<Code File="WaitTimer" WaitTime="5000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2" >
					<MoveTo X="-482.5884" Y="2211.229" Z="541.1676" />
					<Code File="MyCTM" X="-460.8665" Y="2209.733" Z="541.1131" TerminateWhen="Object(201369) != null" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<If Condition="Unit(97320) != null" >
						<If Condition="Me.X &lt;= 4200" >
							<MoveTo X="4181.413" Y="2816.862" Z="353.2509" />
							<Code File="RunCode"><![CDATA[
									var magePoi = Unit(94913);

									if (magePoi != null)
									{
										magePoi.Target();
										StyxWoW.Me.SetFacing(magePoi.Location);
										await Coroutine.Sleep(450);

										SpellManager.Cast(49576);
									}
								]]>
							</Code>
							<MoveTo X="4213.39" Y="2815.095" Z="353.2506" />
						</If>

						<If Condition="Me.X &lt; 4234 &amp;&amp; Me.X &gt; 4200" >
							<Code File="Hooks\DoWhen" ActivityName="ShutOffCombat" AllowUseDuringCombat="true" UseWhen="ObjectManager.GetObjectsOfType&lt;WoWUnit&gt;().Where(x =&gt; x.Entry == 97320).All(x =&gt; x.HasAura(&quot;Hardened&quot;)) &amp;&amp; Bots.Grind.LevelBot.BehaviorFlags.HasFlag(Bots.Grind.BehaviorFlags.Combat)" >
								<Code File="RunCode" Code="Bots.Grind.LevelBot.BehaviorFlags &amp;= ~Bots.Grind.BehaviorFlags.Combat;" />
							</Code>
							<MoveTo X="4214.419" Y="2768.343" Z="350.9633" />
							<Code File="WaitTimer" WaitTime="3000" />

							<Code File="RunCode"><![CDATA[
									var pressureplatePoi = Unit(97595);
									var gatekeeperPoi = Unit(97320, u => u.Location.Distance(pressureplatePoi.Location) > 1);

									await Coroutine.Wait(30000, () => SpellManager.CanCast(49576));
									WoWMovement.ClickToMove(new WoWPoint(4226.167, 2779.087, 350.9633));
									gatekeeperPoi.Target();
									await Coroutine.Sleep(5500);
									StyxWoW.Me.SetFacing(gatekeeperPoi.Location);
									await Coroutine.Sleep(1000);
									SpellManager.Cast(49576);
								]]> <!-- NOTE: <CheckLater> It may be worth using Control Undead here instead. -->
							</Code>

							<Code File="RunCode" Code="
								while (Me.Location.Distance(new WoWPoint(4223.378, 2761.137, 350.9626)) &gt;= 1)
								{
									WoWMovement.ClickToMove(new WoWPoint(4223.378, 2761.137, 350.9626));
									await Coroutine.Yield();
								}
							" /> <!-- Because MyCTM won't work in combat.. -->

							<Code File="WaitTimer" WaitTime="1500" />
							<Code File="Hooks\DoWhen" ActivityName="ShutOffCombat" Command="Remove" />
							<Code File="WaitTimer" WaitTime="1500" />
							<Code File="RunCode" Code="Bots.Grind.LevelBot.BehaviorFlags |= Bots.Grind.BehaviorFlags.Combat;" />
							<MoveTo X="4246.131" Y="2769.065" Z="350.9633" />
						</If>
					</If>

					<If Condition="Me.X &gt; 4234" >
						<If Condition="Unit(93948, u =&gt; u.IsAlive) != null" >
							<Code File="Hooks\Avoid" AvoidName="BaelgunWhirlwind" Command="Add" ObjectId="93948" Radius="10" AvoidWhen="UNIT.ChanneledCastingSpellId == 192647" />
							<Code File="KillUntilComplete" MobId="93948" X="4257.26" Y="2769.935" Z="349.3817" TerminateWhen="Unit(93948, u =&gt; u.IsDead) != null || Unit(93948) == null" />
							<Code File="Hooks\Avoid" AvoidName="BaelgunWhirlwind" Command="Remove" />
						</If>
						<Code File="InteractWith" MobId="251882" WaitForNpcs="false" InteractByLooting="true" WaitTime="1500" X="4259.546" Y="2765.99" Z="349.3201" />

						<If Condition="Unit(93949, u =&gt; u.IsAlive) != null" >
							<Code File="Hooks\DoWhen" ActivityName="InterruptHeal" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.IsCasting &amp;&amp; SpellManager.CanCast(47528, Me.CurrentTarget, true)" >
								<Code File="RunCode" Code="
										await Coroutine.Wait(15000, () =&gt; SpellManager.CanCast(47528));
										SpellManager.Cast(47528);
										await Coroutine.Sleep(350);
								" />
							</Code>
							<Code File="KillUntilComplete" MobId="93949" X="4353.202" Y="2670.301" Z="349.2956" TerminateWhen="Unit(93949, u =&gt; u.IsDead) != null" />
							<Code File="Hooks\DoWhen" ActivityName="InterruptHeal" Command="Remove" />
						</If>
						<Code File="InteractWith" MobId="251884" WaitForNpcs="false" InteractByLooting="true" WaitTime="1500" X="4356.215" Y="2674.468" Z="349.3328" />

						<If Condition="Unit(93950, u =&gt; u.IsAlive) != null" >
							<MoveTo X="4455.575" Y="2734.752" Z="346.7824" />
							<DisableBehavior Name="Combat" /> <!-- Pull him away from extra mobs -->
							<MoveTo X="4459.694" Y="2752.575" Z="349.0206" />
							<EnableBehavior Name="Combat" />

							<Code File="KillUntilComplete" MobId="93950" X="4455.179" Y="2762.228" Z="349.3069" TerminateWhen="Unit(93950, u =&gt; u.IsDead) != null" />
						</If>
						<Code File="InteractWith" MobId="251885" WaitForNpcs="false" InteractByLooting="true" WaitTime="1500" X="4452.525" Y="2773.805" Z="349.3133" />s

						<If Condition="Unit(93951, u =&gt; u.IsAlive) != null" >
							<Code File="Hooks\DoWhen" ActivityName="InterruptHammer" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.IsCasting &amp;&amp; SpellManager.CanCast(47528, Me.CurrentTarget, true)" >
								<Code File="RunCode" Code="
										await Coroutine.Wait(15000, () =&gt; SpellManager.CanCast(47528));
										SpellManager.Cast(47528);
										await Coroutine.Sleep(350);
								" />
							</Code>
							<Code File="KillUntilComplete" MobId="93951" X="4385.518" Y="2769.319" Z="357.6572" TerminateWhen="Unit(93951, u =&gt; u.IsDead) != null" />
						</If>
						<Code File="InteractWith" MobId="251886" WaitForNpcs="false" InteractByLooting="true" WaitTime="1500"  X="4385.655" Y="2775.027" Z="359.8834" />
					</If>
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<MoveTo X="4366.929" Y="2769.512" Z="355.9345" />
					<Code File="MyCTM"  X="4357.631" Y="2770.241" Z="356.053" TerminateWhen="Me.Z &gt;= 500" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<Code File="InteractWith" MobId="242502" X="504.4896" Y="-2124.408" Z="841.2767" />
					<Code File="WaitTimer" WaitTime="35000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 6" >
					<Code File="InteractWith" MobId="100577" NumOfTimes="5" X="504.4896" Y="-2124.41" Z="841.3603" TerminateWhen="Me.Z &gt; 900" />
					<Code File="WaitTimer" WaitTime="5000" />

					<Code File="Hooks\DoWhen" ActivityName="TargetSwitcher" LogExecution="false" AllowUseDuringCombat="true" UseAtInterval="3000" >
						<!-- Using these hooks as a temporarily forced target switch since for whatever reason KUC isn't switching targets anymore...
							Also doing it as interval because having two hooks to blacklist+whitelist was bugging out.. -->
						<If Condition="Unit(93963, u =&gt; u.HasAura(189679)) != null &amp;&amp; !Blacklist.Contains(Unit(93963), BlacklistFlags.Combat)" >
							<Code File="RunCode" Code="Blacklist.Add(Unit(93963), BlacklistFlags.Combat, TimeSpan.FromMinutes(5));" />
						</If>

						<If Condition="Unit(93963, u =&gt; !u.HasAura(189679)) != null &amp;&amp; Blacklist.Contains(Unit(93963), BlacklistFlags.Combat)" >
							<Code File="RunCode" Code="Blacklist.Clear(u =&gt; u.Entry == 93963);" />
						</If>
					</Code>

					<Code File="KillUntilComplete" MobIds="95321, 95324, 95323" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 6 || Me.Z &lt;= 900" />
					<!-- PursuitUnit Target switching isn't working here????
						Also, Singular is only using auto attacks????
					-->


					<Code File="Hooks\DoWhen" ActivityName="TargetSwitcher" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 7" >
					<Code File="WaitTimer" WaitTime="10000" TerminateWhen="Object(247386) != null" />
					<Code File="InteractWith" MobId="247386" InteractByLooting="true" WaitTime="1500" X="504.0677" Y="-2124.243" Z="840.9485" />
					<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
					<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 8" >
					<MoveTo X="430.5035" Y="-2123.148" Z="864.817" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 8" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 9" >
					<Code File="InteractWith" MobId="242469" X="429.026" Y="-2118.351" Z="864.8716" />
				</If>
			</While>
			<TurnIn QuestName="The Call of Icecrown" QuestId="38990" TurnInName="Highlord Darion Mograine" TurnInId="93437" X="-1507.17" Y="1048.095" Z="260.4036" />
		<!-- END Story: Artifact Weapon - Blades of the Fallen Prince -->

		<If Condition="!IsQuestCompleted(39757)" >
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Death Knight.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	Keeping Your Edge (39757) is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	Keeping Your Edge (39757) is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->
<HBProfile>
	<QuestOrder>

		<!-- NOTE
			This is just a draft, an idea really.
			It will be dramatically changed in the coming future -->

		<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			static bool UseAntiStuck = true;

			public static class StuckDetection
			{
				public static Vector3 LastPointLong = new Vector3(0f,0f,0f);
				public static Vector3 LastPointShort = new Vector3(0f,0f,0f);

				public static bool IsStuck(bool shortTerm = false)
				{
					if (!UseAntiStuck) return false; 
					if (!StyxWoW.Me.IsValid) return false;
					if (StyxWoW.Me.IsDead) return false;
					if (StyxWoW.Me.IsActuallyInCombat) return false;
					if (StyxWoW.Me.HasAura("Resurrection Sickness")) return false;

					bool isStuck = false;

					var currentPoint = StyxWoW.Me.Location;
					if (shortTerm)
					{
						isStuck = currentPoint.DistanceSqr(LastPointShort) < 10f * 10f;
						LastPointShort = currentPoint;
					}
					else
					{
						isStuck = currentPoint.DistanceSqr(LastPointLong) < 10f * 10f;
						LastPointLong = currentPoint;
					}
					return isStuck;
				}
			}
		]]>
		</CustomBehavior>
		<CustomBehavior File="RunCode" Code="StuckDetection.LastPointLong = new Vector3(0f,0f,0f); StuckDetection.LastPointShort = new Vector3(0f,0f,0f);" /> <!-- Clean out stale data in case the user stop/starts the bot. -->
		<CustomBehavior File="Hooks\DoWhen" ActivityName="DoWhen_StuckDetector_LongTerm" AllowUseWhileFlying="true" AllowUseWhileMounted="true" LogExecution="true" UseAtInterval="210000" >
			<If Condition="StuckDetection.IsStuck() &amp;&amp; HasItem(6948)" >
				<CustomBehavior File="RunCode"><![CDATA[
					Logging.Write(System.Windows.Media.Colors.DeepSkyBlue, "[ProfileBase]: Stuck detection activated!");
					await CommonCoroutines.StopMoving();
					await CommonCoroutines.LandAndDismount();
					WoWItem dalaranHearthstone = StyxWoW.Me.BagItems.FirstOrDefault(x => x.Entry == 6948);
					if (dalaranHearthstone.CooldownTimeLeft != TimeSpan.Zero) {
						Logging.Write(System.Windows.Media.Colors.DeepSkyBlue, "[ProfileBase]: Awaiting Hearthstone cooldown before attempting hearth!");
						await Coroutine.Wait(901000, () => dalaranHearthstone.CooldownTimeLeft == TimeSpan.Zero);
					}
					dalaranHearthstone.Interact();
					await Coroutine.Sleep(11500);
					Logging.Write(System.Windows.Media.Colors.DeepSkyBlue, "[ProfileBase]: Reloading profile.");
					ProfileManager.LoadNew(ProfileManager.XmlLocation);
				]]>
				</CustomBehavior>
			</If>
		</CustomBehavior>
		<CustomBehavior File="Hooks\DoWhen" ActivityName="DoWhen_StuckDetector_ShortTerm" AllowUseWhileFlying="true" AllowUseWhileMounted="true" LogExecution="true" UseAtInterval="5000" >
			<If Condition="StuckDetection.IsStuck(true) &amp;&amp; Me.IsMoving" >
				<CustomBehavior File="RunCode"><![CDATA[
					Logging.Write(System.Windows.Media.Colors.DeepSkyBlue, "[ProfileBase]: Short-term stuck detection activated!");
					await CommonCoroutines.StopMoving();
					if (Me.IsFlying)
					{
						WoWMovement.Move(WoWMovement.MovementDirection.Backwards, TimeSpan.FromMilliseconds(2000));
						await Coroutine.Sleep(2000);
						BlackspotManager.AddBlackspot(new Blackspot(StuckDetection.LastPointShort, 5, 5));
					}
					else
					{
						WoWMovement.Move(WoWMovement.MovementDirection.Backwards, TimeSpan.FromMilliseconds(1000));
						BlackspotManager.AddBlackspot(new Blackspot(StuckDetection.LastPointShort, 5, 5));
					}
				]]>
				</CustomBehavior>
			</If>
		</CustomBehavior>

	</QuestOrder>
</HBProfile>

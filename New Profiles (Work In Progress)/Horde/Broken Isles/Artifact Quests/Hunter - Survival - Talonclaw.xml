<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Hunter - Survial - Talonclaw Artifact ($ShortHash$)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>

<!-- INITORDER COMMENT 
	<InitOrder>
		Perhaps add detection for loading the class hall if player hasn't unlocked this zone yet.
		<Code File="Misc\RunLua" Lua="SetCVar('AutoLootDefault', 1)" />

		<Code File="EnablePlugin" Names="Anti Drown" />
		<Code File="EnablePlugin" Names="Refreshment Detection" />

		<Code File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />

		<LootMobs Value="true" />
		<TargetingDistance Value="45" /> Use LevelBot default
	</InitOrder>
END INITORDER COMMENT -->

	<QuestOrder>
		<!-- Check function status -->
		<Code File="RunCode" Type="Definition">
			<![CDATA[
			private static bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
			private static bool IsStoreProfile(string path) => path.StartsWith("store://");
			private static string Slashify(string path) => IsStoreProfile(path) ? path.Replace(@"\", "/") : path.Replace("/", @"\");

			public __CompiledBatchClass__()
			{
				if (profileFunctionsEnabled == null || profileFunctionsEnabled == false)
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!");
					LoadProfile(@"..\..\..\Functions\Activate Functions.xml");
				}
			}

			private static void LoadProfile(string path)
			{
				var profile = GetNewPath(path);
				if (!IsStoreProfile(profile) && !File.Exists(profile))
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Profile does not exist.\n" + profile);
					return;
				}

				Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Loading: " + profile);
				ProfileManager.LoadNew(profile, false);
			}

			private static string GetNewPath(string path)
			{
				if (IsStoreProfile(path))
					return Slashify(path);

				var currentProfile = ProfileManager.XmlLocation;
				if (IsStoreProfile(currentProfile))
					return Slashify(currentProfile + "/../" + path);

				var absolutePath = Path.Combine(Path.GetDirectoryName(currentProfile), path);
				absolutePath = Path.GetFullPath(absolutePath);
				var canonicalPath = new Uri(absolutePath).LocalPath;
				return Slashify(canonicalPath);
			}]]>
		</Code>
		<!-- END Check function status -->

		<If Condition="Me.IsAlliance" >
			<Code File="LoadProfile" ProfileName="..\..\..\1-110 Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Dalaran Hearth Task -->
			<Code File="RunCode" Type="Definition">
				<![CDATA[
					async Task DalaranHearth()
					{
						if (!(Me.ZoneId == 7502 || Me.ZoneId == 8392) && HasItem(140192))
						{
							Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul Navigator]: ", System.Windows.Media.Colors.LightGreen, "Using Dalaran Hearthstone!");
							await CommonCoroutines.LandAndDismount("Using Hearthstone to reach Dalaran (Broken Isles)");
							await CommonCoroutines.StopMoving(); 
							WoWItem dalaranHearth = StyxWoW.Me.BagItems.FirstOrDefault(x => x.Entry == 140192);
							if (dalaranHearth.CooldownTimeLeft <= TimeSpan.FromMinutes(3))
							{
								if (dalaranHearth.CooldownTimeLeft != TimeSpan.Zero)
								{
									Logging.Write(System.Windows.Media.Colors.Yellow, "[Profile]: Awaiting cooldown before attempting hearth!");
									await Coroutine.Wait(306000, () => dalaranHearth.CooldownTimeLeft == TimeSpan.Zero);
								}
								dalaranHearth.Interact();
								var currentLoc = StyxWoW.Me.ZoneId;
								await Coroutine.Wait(30000, () => StyxWoW.Me.ZoneId != currentLoc);
								await Coroutine.Sleep(1500);
							}
						}
					}
					]]>
			</Code>
		<!-- END Dalaran Hearth Task -->

		<!-- Get Continuation Quest -->
			<If Condition="IsQuestCompleted(40953) &amp;&amp; NeedsQuest(39427) &amp;&amp; NeedsQuest(44043, 44366)" > <!-- Using On Eagle's Wings (40953) to determine if we've already got the first artifact. -->
				<If Condition="!Me.HasAura(213170)" >
					<Code File="RunCode" Code="await DalaranHearth();" />
					<MoveTo X="-813.4112" Y="4277.193" Z="746.2777" />
					<Code File="InteractWith" MobId="108868" NonCompeteDistance="0" GossipOptions="1"  X="-809.467" Y="4273.58" Z="746.2848" />
				</If>
				<Code File="InteractWith" MobId="107317" WaitTime="1250" X="4642.032" Y="5285.06" Z="840.6198" />
				<Code File="Misc\RunLua" WaitTime="1250" Lua="QuestFrameAcceptButton:Click();" />
			</If>
		<!-- END Get Continuation Quest -->

		<!-- Second Artifact -->
			<If Condition="HasQuest(44043)" >
				<While Condition="DoQuest(44043)" >
					<If Condition="!Lua.GetReturnVal&lt;bool&gt;(&quot;return QuestChoiceFrame:IsVisible()&quot;, 0)" >
						<Code File="InteractWith" MobId="107317" GossipOptions="1" QuestId="44043" QuestObjectiveIndex="1" X="4642.032" Y="5285.06" Z="840.6198" />
					</If>
					<!-- NOTE: <AddFunction> : Need code to determine which button the artifact may be.  
					<Code File="Misc\RunLua" QuestId="44043" Lua="QuestChoiceFrameOptionXXX.OptionButton:Click()" WaitTime="1200" />-->
					<Code File="UserDialog" QuestId="44043" AllowBotStop="True" SoundCue="Exclamation" SoundCueInterval="150"	Text="Choose the artifact weapon.\n\nCurrently there is no automation for this." />
				</While>
				<TurnIn QuestName="Continuing the Legend" QuestId="44043" TurnInName="Emmarel Shadewarden" TurnInId="107317" X="4642.032" Y="5285.06" Z="840.6198" />
			</If>
		<!-- END Second Artifact -->

		<!-- Third Artifact -->
			<If Condition="HasQuest(44366)" >
				<While Condition="DoQuest(44366)" > <!-- NOTE: <CheckMe> : Secondary Artifact Quest.  Need to properly conditionalize this. -->
					<If Condition="!Lua.GetReturnVal&lt;bool&gt;(&quot;return QuestChoiceFrame:IsVisible()&quot;, 0)" >
						<Code File="InteractWith" MobId="107317" GossipOptions="1" QuestId="44366" QuestObjectiveIndex="1" X="4642.032" Y="5285.06" Z="840.6198" />
					</If>
					<Code File="Misc\RunLua" QuestId="44366" Lua="QuestChoiceFrameOption1.OptionButton:Click()" WaitTime="1200" /> <!-- Should always be 1. -->
				</While>
				<TurnIn QuestName="One Last Adventure" QuestId="44366" TurnInName="Emmarel Shadewarden" TurnInId="107317" X="4642.032" Y="5285.06" Z="840.6198" />
			</If>
		<!-- END Third Artifact -->

		<If Condition="IsQuestCompleted(40953)" > <!-- Using On Eagle's Wings (40953) to determine if we've already got the first artifact. -->
			<PickUp QuestName="Preparation for the Hunt" QuestId="41542" GiverName="Emmarel Shadewarden" GiverId="107317" X="4642.032" Y="5285.06" Z="840.6198" /> <!-- Class Hall Phase -->
			<!-- Add portal to Dalaran support? -->
			<Else>
				<PickUp QuestName="Preparation for the Hunt" QuestId="41542" GiverName="Emmarel Shadewarden" GiverId="102478" X="-876.658" Y="4379.09" Z="739.1406" /> <!-- Dalaran Phase -->
			</Else>
		</If>
		<If Condition="QuestDone(41542)" >
			<If Condition="Me.HasAura(213170)" >
				<Code File="InteractWith" MobId="244510" WaitTime="3000" X="4552.774" Y="5244.073" Z="880.768" />
			</If>
			<TurnIn Nav="Fly" QuestName="Preparation for the Hunt" QuestId="41542" TurnInName="Apata Highmountain" TurnInId="104382" X="-858.3577" Y="4287.647" Z="746.2834" />
		</If>

		<!-- Story: Artifact Weapon - Talonclaw -->
			<PickUp QuestName="The Eagle Spirit's Blessing" QuestId="39427" GiverName="Apata Highmountain" GiverId="104382" X="-858.3577" Y="4287.647" Z="746.2834" />
			<While Condition="DoQuest(39427)" >
				<Code File="InteractWith" MobId="100965" QuestId="39427" QuestObjectiveIndex="1" X="-859.3976" Y="4282.78" Z="746.283" />
				<Code File="WaitTimer" QuestId="39427" QuestObjectiveIndex="1" WaitTime="120000" />
				<MoveTo QuestId="39428" QuestObjectiveIndex="2" X="3143.619" Y="3458.598" Z="773.808" />
				<Code File="KillUntilComplete" MobId="110685" QuestId="39427" QuestObjectiveIndex="3" X="3139.728" Y="3530.74" Z="771.322" />
				<MoveTo QuestId="39427" QuestObjectiveIndex="4" X="3152.996" Y="3392.207" Z="773.7906" />
				<!-- NOTE: <Check> : May need to wait a little bit for the NPC to catch up. -->
				<Code File="WaitTimer" WaitTime="5000" />
				<Code File="InteractWith" MobId="110901" QuestId="39427" QuestObjectiveIndex="4" X="3154.5" Y="3380.82" Z="774.186" />
			</While>
			<TurnIn QuestName="The Eagle Spirit's Blessing" QuestId="39427" TurnInName="Apata Highmountain" TurnInId="110821" X="3148.192" Y="3391.234" Z="773.7953" />

			<PickUp QuestName="The Spear in the Shadow" QuestId="40385" GiverName="Apata Highmountain" GiverId="110986" X="3148.169" Y="3391.162" Z="773.7974" />
			<While Condition="DoQuest(40385)" >
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 0 &amp;&amp; !HasItem(128808)" >
					<Code File="InteractWith" MobId="110985" QuestId="40385" X="3154.497" Y="3380.818" Z="774.2692" />
					<Code File="WaitTimer" QuestId="40385" WaitTime="30000" TerminateWhen="!Me.InVehicle" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<Code File="InteractWith" MobId="99374" GossipOptions="1" QuestId="40385" QuestObjectiveIndex="2" X="3371.664" Y="1915.839" Z="1.61386" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
					<Code File="WaitTimer" WaitTime="25000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2">
					<MoveTo X="3371.443" Y="1723.903" Z="-0.2859921" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<Code File="KillUntilComplete" MobId="100173" X="3379.159" Y="1696.113" Z="0.202059" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 3" />
					<!-- Defeat with Freezing Trap, but it should complete without using Freezing Trap. -->
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<Code File="InteractWith" MobId="101325" X="3383.265" Y="1690.875" Z="2.709126" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 4" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<UseMount Value="false" /> <!-- Because the bot loves pulling an unkillable amount of mobs while running around -->
					<Code File="InteractWith" MobId="101325" WaitForNpcs="false" X="3439.378" Y="1621.321" Z="11.61867" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
					<Code File="InteractWith" MobId="101325" WaitForNpcs="false" X="3495.175" Y="1631.854" Z="7.509228" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
					<Code File="InteractWith" MobId="101325" WaitForNpcs="false" X="3484.626" Y="1551.488" Z="7.51373" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
					<UseMount Value="true" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 6" >
					<Code File="InteractWith" MobId="100221" GossipOptions="1,1" X="3534.677" Y="1823.814" Z="0.8274691" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 6" />
					<Code File="WaitTimer" WaitTime="15000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 6" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 7" >
					<Code File="InteractWith" MobId="245212" X="3531.51" Y="1817.118" Z="0.6998095" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 7" />
					<Code File="WaitTimer" WaitTime="10000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 7" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 8" >
					<MoveTo X="3611.785" Y="1788.806" Z="2.892792" />
					<Code File="WaitTimer" WaitTime="30000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 7" />
					<Code File="RunCode" Code="await SkipCutscene();" />
				</If>

				<Code File="RunCode" Code="Bots.Grind.LevelBot.BehaviorFlags &amp;= ~Bots.Grind.BehaviorFlags.Rest;" /> <!-- We get a debuff that prevents us from healing above the default rest health % -->

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 9" >
					<MoveTo X="3609.028" Y="1787.506" Z="2.931524" />
					<Code File="WaitTimer" WaitTime="20000" TerminateWhen="Me.Combat" />
					<Code File="RunCode" Code="
						SpellManager.Cast(1543);
						await Coroutine.Sleep(750);
						SpellManager.ClickRemoteLocation(Me.Location);" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 10" >
					<Code File="InteractWith" MobId="100367" X="3663.116" Y="1847.524" Z="1.001017" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 10" />
					<Code File="WaitTimer" WaitTime="25000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 10" />
					<Code File="KillUntilComplete" MobId="100376" X="3662.939" Y="1847.761" Z="0.918546" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 10" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 11" >
					<MoveTo X="3734.792" Y="1704.929" Z="0.8333333" />
					<Code File="InteractWith" MobId="100367" X="3734.792" Y="1704.929" Z="0.8333333" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 11" />
					<Code File="WaitTimer" WaitTime="25000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 11" />
					<Code File="KillUntilComplete" MobId="100376" X="3737.971" Y="1705.616" Z="1.221259" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 11" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 12" >
					<Code File="RunCode" Code="await SkipCutscene();" />
					<Code File="KillUntilComplete" MobId="99480" X="3872.277" Y="1637.849" Z="-0.328723" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 12" />
				</If>
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 13" >
					<Code File="InteractWith" MobId="248834" InteractByLooting="true" WaitTime="1500" X="3879.121" Y="1639.92" Z="-0.07389323" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 13" />
					<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
					<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
				</If>

				<If Condition="HasItem(128808)" >
					<Code File="WaitTimer" WaitTime="30000" TerminateWhen="Object(244510) != null" />
					<Code File="InteractWith" MobId="244510" X="3874.882" Y="1634.444" Z="-0.1819348" />

					<If Condition="IsQuestCompleted(40953)" > <!-- Using On Eagle's Wings (40953) to determine if we've already got the first artifact. -->
						<!-- NOTE: <AddCheck> : This is to go to Hunting Lodge, could ZoneId check it instead of forcing it. -->
						<Code File="InteractWith" MobId="108868" GossipOptions="1" X="-809.467" Y="4273.58" Z="746.2847" />
						<Code File="WaitTimer" WaitTime="10000" />
						<TurnIn QuestName="The Spear in the Shadow" QuestId="40385" TurnInName="Emmarel Shadewarden" TurnInId="107317" X="4642.032" Y="5285.06" Z="840.6198" /> <!-- Class Hall Phase -->
						<Else>
							<TurnIn QuestName="The Spear in the Shadow" QuestId="40385" TurnInName="Emmarel Shadewarden" TurnInId="102478" X="-876.658" Y="4379.09" Z="739.1406" /> <!-- Dalaran Phase -->
						</Else>
					</If>

				</If>
			</While>
		<!-- END Story: Artifact Weapon - Talonclaw -->


		<Code File="RunCode" Code="Bots.Grind.LevelBot.BehaviorFlags |= Bots.Grind.BehaviorFlags.Rest;" /> <!-- We get a debuff that prevents us from healing above the default rest health % -->

		<If Condition="!IsQuestCompleted(40953)" >
			<PickUp QuestName="On Eagle's Wings" QuestId="40953" GiverName="Emmarel Shadewarden" GiverId="102478" X="-876.658" Y="4379.09" Z="739.1407" />
			<!-- We're picking this quest up even though it's not artifact specific as a method of preventing the Class Hall loader from loading another artifact profile. -->
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Hunter.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	On Eagle's Wings is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	On Eagle's Wings is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->
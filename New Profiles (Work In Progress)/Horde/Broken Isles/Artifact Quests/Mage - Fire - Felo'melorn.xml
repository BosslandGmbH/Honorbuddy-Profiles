<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Mage - Fire - Felo'melorn ($Rev: 5593 $)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>

	<DefaultNavType>Fly</DefaultNavType>

<!-- INITORDER COMMENT 
	<InitOrder>
		Perhaps add detection for loading the class hall if player hasn't unlocked this zone yet.
		<Code File="Misc\RunLua" Lua="SetCVar('AutoLootDefault', 1)" />

		<Code File="EnablePlugin" Names="Anti Drown" />
		<Code File="EnablePlugin" Names="Refreshment Detection" />

		<Code File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />

		<LootMobs Value="true" />
		<TargetingDistance Value="45" /> Use LevelBot default
	</InitOrder>
END INITORDER COMMENT -->

	<QuestOrder>
		<!-- Check function status -->
			<Code File="RunCode" Type="Definition" >
				<![CDATA[
					bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
				]]>
			</Code>
			<If Condition="profileFunctionsEnabled == null || profileFunctionsEnabled == false" >
				<Code File="RunCode">
					<![CDATA[ Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!"); ]]>
				</Code>
				<Code File="LoadProfile" ProfileName="..\..\..\Functions\Activate Functions.xml" />
			</If>
		<!-- END Check function status -->

		<If Condition="Me.IsAlliance" >
			<Code File="LoadProfile" ProfileName="..\..\..\1-110 Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Lua.DoString("for i=1,GetNumAddOns() do local relo=false if IsAddOnLoaded(i) then relo=true DisableAddOn(i) end if relo then relo=nil ReloadUI() end end");
				await Coroutine.Sleep(1500);
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Get Continuation Quest -->
		<!-- END Get Continuation Quest -->

		<!-- Second Artifact -->
		<!-- END Second Artifact -->

		<!-- Third Artifact -->
		<!-- END Third Artifact -->

		<!-- Story: Artifact Weapon - Felo'melorn -->
			<PickUp QuestName="An Unexpected Message" QuestId="40267" GiverName="Meryl Felstorm" GiverId="102700" X="-816.66" Y="4695" Z="939.6641" />
			<While Condition="DoQuest(40267)" >
				<Code File="UseItem" QuestId="40267" QuestObjectiveIndex="1" ItemId="130131" />
				<Code File="WaitTimer" QuestId="40267" QuestObjectiveIndex="1" WaitTime="42000" />

				<If Condition="Me.MapId == 1513" >  <!-- NOTE: <Add-CheckMapId> : Leaving Class Hall, entering Dalaran. -->
					<Code File="InteractWith" MobId="244510" WaitTime="3000" X="-832.6424" Y="4685.265" Z="939.9924" />
				</If>
				<If Condition="Me.MapId == 1220 &amp;&amp; Me.Z &gt; 605" > <!-- NOTE: <CheckFunction> : Dalaran to Dalaran Portal Room -->
					<MoveTo X="-847.6401" Y="4463.277" Z="735.8799" />
					<Code File="MyCTM" X="-844.5972" Y="4467.76" Z="736.0415" TerminateWhen="Me.Z &lt;= 605" /> <!-- TerminateWhen in portal room. -->
				</If>
				<If Condition="Me.MapId != 0" > <!-- NOTE: <Add-CheckZoneID> : Leaving Dalaran Portal Room, entering Dalaran Crater -->
					<MoveTo X="-881.0235" Y="4507.995" Z="580.1562" />
					<Code File="InteractWith" MobId="246008" WaitTime="1000" X="-880.408" Y="4511.733" Z="580.4584" />
					<Code File="RunCode" Code="SpellManager.Cast(45438);" /> <!-- Ice Block to prevent fall damage. -->
					<Code File="WaitTimer" WaitTime="10000" TerminateWhen="!Me.IsFalling" />
				</If>

				<MoveTo Nav="Fly" X="270.4472" Y="453.7347" Z="56.45567" />
			</While>
			<TurnIn QuestName="An Unexpected Message" QuestId="40267" TurnInName="Archmage Modera" TurnInId="99398" X="271.2101" Y="452.5" Z="56.94685" />

			<PickUp QuestName="The Path of Atonement" QuestId="40270" GiverName="Archmage Modera" GiverId="99398" X="271.2101" Y="452.5" Z="56.94685" />
			<While Condition="DoQuest(40270)" >
				<Code File="WaitTimer" QuestId="40270" WaitTime="120000" /> 
			</While>
			<TurnIn QuestName="The Path of Atonement" QuestId="40270" TurnInName="Aethas Sunreaver" TurnInId="99415" X="275.4454" Y="452.9391" Z="56.89916" />

			<PickUp QuestName="The Frozen Flame" QuestId="11997" GiverName="Aethas Sunreaver" GiverId="99415" X="275.4454" Y="452.9391" Z="56.89916" />
			<While Condition="DoQuest(11997)" >
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 0" >
					<Code File="WaitTimer" WaitTime="15000" TerminateWhen="Object(99418) != null" />
					<Code File="InteractWith" MobId="99418" X="273.3785" Y="451.5833" Z="57.29637" />
				</If>
			
				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<DisableBehavior Name="Pull" />
					<Code File="Hooks\Avoid" AvoidName="FrostBlock" Command="Add" ObjectType="Npc" ObjectId="99605" Radius="9.5" />
					<!-- NOTE: <AddAvoid> : Mobs use "razors edge", need to avoid it.  Low priority. -->
					<MoveTo X="4151.716" Y="2539.918" Z="364.8733" />
					<MoveTo X="4192.985" Y="2521.079" Z="364.8751" />
					<!-- NOTE: <AddFunction> : I believe we can detect which spellId the Conjurer is using to tell which side of the room to go on.  
												I'm getting 198348 and 198484 on WoWhead.
					-->
					<MoveTo X="4246.797" Y="2537.477" Z="364.8358" />
					<!-- Add spellId detection here as well. -->
					<!-- NOTE: <AddAvoid> : We can use a avoid here for this mob's Blizzard ground AoE -->
					<MoveTo X="4254.109" Y="2524.368" Z="364.8636" />
					<Code File="MyCTM" X="4255.084" Y="2523.21" Z="364.8657" />
					<Code File="RunCode" Code="SpellManager.Cast(1953);" />
					<EnableBehavior Name="Pull" />
					<Code File="KillUntilComplete" MobId="98760" X="4280.021" Y="2484.34" Z="365.5589" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
					<!-- Turn all avoids and DoWhens off -->
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2" >
					<Code File="KillUntilComplete" MobId="102105" X="4291.065" Y="2483.146" Z="365.0472" TerminateWhen="Unit(102105) == null" />
					<!-- NOTE: <AddAvoid> : May need avoid here.  Ice falling from ceiling which causes knockback and decent damage. -->
					<MoveTo X="4351.601" Y="2486.511" Z="358.4408" />
					<MoveTo X="4355.472" Y="2503.209" Z="358.4413" />
					<MoveTo X="4341.354" Y="2508.521" Z="358.4436" />
					<Code File="KillUntilComplete" MobId="105377" X="4359.234" Y="2520.515" Z="358.4319" TerminateWhen="Unit(105377) == null" />
					<!-- NOTE: <AddAvoid> : May need avoid here.  Ice falling from ceiling which causes knockback and decent damage AND Frost Blocks... -->
					<MoveTo X="4365.862" Y="2624.899" Z="351.1012" />
					<Code File="KillUntilComplete" MobId="105378" X="4360.363" Y="2651.988" Z="351.1008" TerminateWhen="Unit(105378) == null" />
					<!-- Remove avoids -->
					<!-- NOTE: <AddAvoid> : Skeletons use Razor's Edge ability, hits hard. -->
					<Code File="KillUntilComplete" MobId="105379" X="4474.29" Y="2767.27" Z="350.9629" TerminateWhen="Unit(105379) == null" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<MoveTo X="4546.85" Y="2769.675" Z="351.101" />
					<Code File="WaitTimer" WaitTime="90000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 3" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<!-- NOTE: <AddAvoid> : Avoid the big guys spin attack - FATAL Priority. -->
					<Code File="Hooks\Avoid" AvoidName="FlameWhirl_Avoid" ObjectId="98686" Radius="15" AvoidWhen="UNIT.IsCasting" />
					<MoveTo X="4628.903" Y="2803.909" Z="361.1649" /> <!-- To prevent avoid from walking us out of the room. -->
					<Code File="KillUntilComplete" MobId="99615" X="4644.307" Y="2777.43" Z="361.1797" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 4" />
					<Code File="Hooks\Avoid" AvoidName="FlameWhirl_Avoid" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<Code File="WaitTimer" WaitTime="5000" />
					<Code File="InteractWith" MobId="247494" InteractByLooting="true" WaitTime="1500" X="4641.81" Y="2769.26" Z="362.6401" />
					<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
					<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
				</If>

				<If Condition="HasItem(128820)" >
					<Code File="InteractWith" MobId="99861" X="4625.474" Y="2769.47" Z="361.1645" />
				</If>
			</While>
			<TurnIn QuestName="The Frozen Flame" QuestId="11997" TurnInName="Archmage Modera" TurnInId="90418" X="-851.6893" Y="4639.288" Z="749.5451" />
		<!-- END Story: Artifact Weapon - Felo'melorn -->


		<If Condition="!IsQuestCompleted(41125)" >
			<PickUp QuestName="The Champion's Return" QuestId="41114" GiverName="Meryl Felstorm" /> <!-- Auto Pickup -->
			<While Condition="DoQuest(41114)" >
				<Code File="RunCode" Code="SpellManager.Cast(193759);" />
				<Code File="WaitTimer" WaitTime="10000" TerminateWhen="!Me.IsCasting" />
			</While>
			<TurnIn QuestName="The Champion's Return" QuestId="41114" TurnInName="Meryl Felstorm" TurnInId="102700" X="-798.9618" Y="4702.451" Z="939.9673" />

			<PickUp QuestName="Unlocked Potential" QuestId="41125" GiverName="Meryl Felstorm" GiverId="102700" X="-798.9618" Y="4702.451" Z="939.9673" />
			<!-- We're picking this quest up even though it's not artifact specific as a method of preventing the Class Hall loader from loading another artifact profile. -->
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Mage.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	XXXX is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	XXXX is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->
<HBProfile xsi:noNamespaceSchemaLocation="../Questing Profile Pack/Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<MinDurability>-1</MinDurability>
	<MinFreeBagSlots>-1</MinFreeBagSlots>

	<!-- Original contribution by EchoTiger -->
	<Name>41-58 Autoloader ($ShortHash$)</Name>

	<QuestOrder>
		<!-- Check function status -->
		<Code File="RunCode" Type="Definition">
			<![CDATA[
			private static bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
			private static bool IsStoreProfile(string path) => path.StartsWith("store://");
			private static string Slashify(string path) => IsStoreProfile(path) ? path.Replace(@"\", "/") : path.Replace("/", @"\");

			public __CompiledBatchClass__()
			{
				if (profileFunctionsEnabled == null || profileFunctionsEnabled == false)
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!");
					LoadProfile(@"..\Functions\Activate Functions.xml");
				}
			}

			private static void LoadProfile(string path)
			{
				var profile = GetNewPath(path);
				if (!IsStoreProfile(profile) && !File.Exists(profile))
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Profile does not exist.\n" + profile);
					return;
				}

				Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Loading: " + profile);
				ProfileManager.LoadNew(profile, false);
			}

			private static string GetNewPath(string path)
			{
				if (IsStoreProfile(path))
					return Slashify(path);

				var currentProfile = ProfileManager.XmlLocation;
				if (IsStoreProfile(currentProfile))
					return Slashify(currentProfile + "/../" + path);

				var absolutePath = Path.Combine(Path.GetDirectoryName(currentProfile), path);
				absolutePath = Path.GetFullPath(absolutePath);
				var canonicalPath = new Uri(absolutePath).LocalPath;
				return Slashify(canonicalPath);
			}]]>
		</Code>
		<!-- END Check function status -->
		
		<If Condition="Me.IsAlliance" >
			<Code File="LoadProfile" ProfileName="..\Autoloader.xml" />
		</If>

		<Code File="RunCode" Type="Definition"><![CDATA[
			bool LoremasterCheckpointCheck(float levelToCheck, int achievementId = 0, int achievementIndex = 0)
			{
				if (Me.LevelFraction < levelToCheck) return true;
				if (achievementId == 0) return false;
				return (Styx.Helpers.CharacterSettings.Instance.IgnoreCheckpoints && !IsAchievementCompleted(achievementId, achievementIndex));
			}
			bool HasArrivedEK()
			{
				if (Me.ZoneId == 7078 || Me.ZoneId == 7004) return false; // Draenor Garrisons count as instanced locations.
				if (StyxWoW.Me.MapId == 0  || Me.IsInInstance) return true;
				return false;
			}
			bool InPriorityLocationEK()
			{
				if (StyxWoW.Me.ZoneId == 6554 || StyxWoW.Me.ZoneId == 6141) return true; // Horde Shrine
				return false;
			}
			bool HearthIsPriorityLocationEK()
			{
				if (StyxWoW.Me.HearthstoneAreaId == 6519) return true; // Horde Shrine
				if (Styx.WoWInternals.DBC.AreaTable.FromId(StyxWoW.Me.HearthstoneAreaId).MapId == 0) return true; // All EK inns.
				return false;
			}
			bool HearthIsReadyEK()
			{
				if (HasItem(64488) && !WoWSpell.FromId(94719).Cooldown) return true; // Innkeeper Daughter
				if (HasItem(6948) && !WoWSpell.FromId(8690).Cooldown) return true; // Hearthstone
				if (SpellManager.CanCast(556)) return true; // Astral Recall
				return false;
			}
			bool HasHearthEK()
			{
				if (HasItem(64488)) return true; // Innkeeper Daughter
				if (HasItem(6948)) return true; // Hearthstone
				if (SpellManager.CanCast(556)) return true; // Astral Recall
				return false;
			}
			bool CastingInterruptedEK()
			{
				if (StyxWoW.Me.Combat || !Me.IsCasting) return true;
				return false;
			}
			void EKLog(System.Windows.Media.Color color, string message)
			{
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul Navigator]: ", color, $"{message}");
			}
			]]>
		</Code>

		<If Condition="!HasArrivedEK() &amp;&amp; Me.Level &lt; 59" > <!-- LoremasterCheckpointCheck(58, 1678) -->
			<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;Going to Eastern Kingdoms!&quot;);" />
			<!-- /// Mage Logic /// -->
			<If Condition="SpellManager.CanCast(49358)" > <!-- Checks if we're a mage and spell is fully learnt+castable -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're a Mage! Teleporting to Stonard.&quot;);" />
				<Code File="ForcedDismount" />
				<While Condition="!HasArrivedEK()" >
					<Code File="Misc\RunLua" Lua="CastSpellByID(49358);" WaitTime="500" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="HasArrivedEK() || CastingInterruptedEK()" />
				</While>
			</If>
			<!-- /// Item Teleportation Logic.   Teleport to area that has portals (Shrine/etc) or teleport to destination /// -->
			<If Condition="!HasArrivedEK() &amp;&amp; HearthIsPriorityLocationEK() &amp;&amp; !InPriorityLocationEK() &amp;&amp; HasHearthEK()" >
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;Hearthing would be faster to reach our destination, attempting to Hearth!&quot;);" />
				<Code File="ForcedDismount" />
				<While Condition="!(HasArrivedEK() || InPriorityLocationEK())" >
					<Code File="RunCode" Code="await Coroutine.Wait(1800000, () => HearthIsReadyEK() || InPriorityLocationEK());" />
					<Code File="Misc\RunLua" Lua="UseItemByName(6948); UseItemByName(64488); CastSpellByID(556);" WaitTime="500" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="HasArrivedEK() || InPriorityLocationEK() || CastingInterruptedEK()" />
				</While>
			</If>
			<!-- /// Generic Logic /// -->
			<If Condition="Me.ZoneId == 6455 || Me.ZoneId == 3430 || Me.ZoneId == 3487 || Me.ZoneId == 3433" > <!-- Sunstrider Isle, Eversong Woods, Silvermoon City, Ghostlands -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in northen Eastern Kingdoms.  Using the Orb of Translocation to enter Undercity.&quot;);" />
				<MoveTo DestName="Inner Sanctum" X="10039.12" Y="-7000.733" Z="61.95295" />
				<While Condition="Me.ZoneId != 85" >
					<Code File="InteractWith" MobId="184502" X="10032.36" Y="-7000.288" Z="61.30979" WaitTime="2500" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.ZoneId == 85" />
				</While>
			</If>
			<If Condition="Me.ZoneId == 4080" > <!-- Isle of Quel'Danas -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Isle of Quel'Danas, using the Flight Master to Undercity.&quot;);" />
				<MoveTo DestName="Ohura, the flight master." X="13009.74" Y="-6910.024" Z="9.584676" />
				<Code File="InteractWith" MobId="26560" X="13012.39" Y="-6911.189" Z="9.586156" WaitTime="850" />
				<Code File="WaitTimer" WaitTime="600000" TerminateWhen="!Me.OnTaxi" />
				<Code File="Misc\RunLua" Lua="TaxiButton2:Click();" WaitTime="1000" />
			</If>
			<If Condition="Me.MapId == 870" > <!-- Pandaria -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Pandaria, using the Shrine portal to Undercity.&quot;);" />
				<If Condition="Me.ZoneId != 6141" > <!-- If not inside of Shrine building -->
					<MoveTo Nav="Fly" X="1629.72" Y="924.5151" Z="471.1836" />
				</If>
				<MoveTo X="1725.195" Y="875.6638" Z="487.0624" />
				<While Condition="!HasArrivedEK()" >
					<Code File="InteractWith" MobId="215124" X="1725.625" Y="871.726" Z="487.3716" TerminateWhen="HasArrivedEK()" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="HasArrivedEK() || Me.Combat" />
				</While>
			</If>
			<If Condition="Me.MapId == 571" > <!-- Northrend -->
				<If Condition="Me.Y &gt;= 3000 &amp;&amp; Me.MapId == 571" > <!-- Western Northrend, Warsong Hold to Orgrimmar -->
					<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Western Northrend, using the Warsong Hold zeppelin to Orgrimmar.&quot;);" />
					<Code File="FlyTo" X="2946.323" Y="6069.065" Z="147.4432" />
					<DisableBehavior Name="FlightPath" />
					<Code File="MyCTM" X="2829.086" Y="6176.118" Z="128.0574" />
					<Code File="WaitTimer" WaitTime="850" /> <!-- Consider lag and CTM tolerance. -->
					<Code File="ForcedDismount" />
					<Code File="UseTransport" TransportId="186238"
						WaitAtX="2837.035" WaitAtY="6185.063" WaitAtZ="121.9975"
						TransportStartX="2837.908" TransportStartY="6187.443" TransportStartZ="140.1648"
						StandOnX="2844.346" StandOnY="6191.38" StandOnZ="122.3167"					  
						TransportEndX="1775.066" TransportEndY="-4299.745" TransportEndZ="151.0326"
						GetOffX="1761.337" GetOffY="-4281.487" GetOffZ="133.1072"
					/>
					<EnableBehavior Name="FlightPath" />
				</If>
				<If Condition="Me.Y &lt; 3000 &amp;&amp; Me.Y &gt; -2200 &amp;&amp; Me.MapId == 571" > <!-- Middle Northrend, Dalaran to Orgrimmar -->
					<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Northrend, using the Dalaran portal to Orgrimmar.&quot;);" />
					<MoveTo Nav="Fly" X="5923.893" Y="589.9543" Z="639.8708" />
					<While Condition="Me.MapId != 1" >
						<Code File="InteractWith" MobId="191009" X="5925.874" Y="593.1875" Z="640.5933" TerminateWhen="Me.MapId == 1" />
						<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.MapId == 1 || Me.Combat" />
					</While>
				</If>
				<If Condition="Me.Y &lt;= -2200 &amp;&amp; Me.MapId == 571" > <!-- Eastern Northrend, Vengeance Landing to Thunder Bluff -->
					<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Eastern Northrend, using the Vengeance Landing zeppelin to Undercity.&quot;);" />
					<MoveTo Nav="Fly" X="1974.872" Y="-6098.991" Z="67.15174" />
					<DisableBehavior Name="FlightPath" />
					<Code File="UseTransport" TransportId="181689"
						WaitAtX="1976.73" WaitAtY="-6095.377" WaitAtZ="67.15933"
						TransportStartX="1989.353" TransportStartY="-6082.776" TransportStartZ="85.59646"
						StandOnX="1982.445" StandOnY="-6091.406" StandOnZ="67.6969"
						TransportEndX="2056.493" TransportEndY="381.6347" TransportEndZ="100.362"
						GetOffX="2061.253" GetOffY="360.2228" GetOffZ="82.48778"
					/>
					<EnableBehavior Name="FlightPath" />
				</If>
			</If>
			<If Condition="Me.MapId == 530" > <!-- Outlands -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Outlands, using the Shattrath portal to Orgrimmar.&quot;);" />
				<MoveTo Nav="Fly" X="-1898.129" Y="5395.677" Z="-12.42727" />
				<While Condition="Me.MapId != 1" >
					<Code File="InteractWith" MobId="183323" X="-1899.45" Y="5393.01" Z="-12.42832" TerminateWhen="Me.MapId == 1" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.MapId == 1 || Me.Combat" />
				</While>
			</If>
			<!--<If Condition="Me.MapId == 530" >  Instanced Draenei Zone 
				Do we really need Horde support for this?
			</If> -->
			<If Condition="Me.CurrentMap.ExpansionId == 5" > <!-- Draenor -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Draenor, using the Ashran portal to Orgrimmar.&quot;);" />
				<If Condition="Me.Y &gt; -3509.631" > <!-- Not in Ashran -->
					<If Condition="Me.BagItems.FirstOrDefault(h => h.Entry == 110560).CooldownTimeLeft.TotalMilliseconds == 0 &amp;&amp; Me.ZoneId != 7004" > <!-- Can cast G-Hearth and Outside of Garrison. -->
						<While Condition="Me.ZoneId != 7004" >
							<Code File="Misc\RunLua" Lua="UseItemByName(110560);" WaitTime="500" />
							<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.ZoneId == 7004 || CastingInterruptedEK()" />
						</While>
						<Else>
							<MoveTo DestName="Garrison" X="5592.404" Y="4529.675" Z="126.3718" />
						</Else>
					</If>
					<If Condition="Me.MapId == 1153" >
						<MoveTo DestName="Ashran Portal" X="5583.557" Y="4373.989" Z="137.6236" />
						<Code File="MyCTM" X="5579.374" Y="4366.707" Z="138.9411" />
						<Code File="MyCTM" X="5575.75" Y="4367.552" Z="138.9789" />
						<Code File="MyCTM" X="5572.477" Y="4361.848" Z="143.433" />
						<Code File="MyCTM" X="5578.62" Y="4358.129" Z="147.87" />
						<Code File="MyCTM" X="5582.464" Y="4364.247" Z="152.3972" />
						<Code File="MyCTM" X="5576.058" Y="4368.637" Z="156.7244" />
						<Code File="MyCTM" X="5572.972" Y="4361.899" Z="159.8998" />
						<Code File="MyCTM" X="5584.697" Y="4356.71" Z="160.9148" />
					</If>
					<While Condition="Me.ZoneId != 7333" >
						<Code File="InteractWith" MobId="233600" X="5586.819" Y="4357.713" Z="161.427" TerminateWhen="Me.ZoneId == 7333" />
						<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.ZoneId == 7333 || Me.Combat" />
					</While>
				</If>
				<MoveTo X="5266.4" Y="-4075.891" Z="21.13024" />
				<While Condition="Me.MapId != 1" >
					<Code File="InteractWith" MobId="235880" X="5266.4" Y="-4075.891" Z="21.13024" TerminateWhen="Me.MapId == 1" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.MapId == 1 || Me.Combat" />
				</While>
			</If>
			<If Condition="Me.MapId == 646" > <!-- Deepholm -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Deepholm, using the portal for Orgrimmar.&quot;);" />
				<MoveTo Nav="Fly" X="991.8574" Y="458.2401" Z="-44.27066" />
				<While Condition="Me.MapId != 1" >
					<Code File="InteractWith" MobId="205273" X="990.495" Y="454.457" Z="-44.2477" TerminateWhen="Me.MapId == 1" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Me.MapId == 1 || Me.Combat" />
				</While>
			</If>
			<If Condition="Me.MapId == 1" > <!-- Kalimdor -->
				<Code File="RunCode" Code="EKLog(Colors.LightGreen, &quot;We're in Kalimdor, taking the Zeppelin in Orgrimmar to Tirisfal Glades.&quot;);" />
				<MoveTo Nav="Fly" X="1840.315" Y="-4390.511" Z="135.2321" />
				<Code File="UseTransport" TransportId="164871"
					WaitAtX="1840.315" WaitAtY="-4390.511" WaitAtZ="135.2321"
					TransportStartX="1833.509" TransportStartY="-4391.543" TransportStartZ="152.7679"
					StandOnX="1834.439" StandOnY="-4385.474" StandOnZ="135.0319"
					TransportEndX="2062.376" TransportEndY="292.998" TransportEndZ="114.973"
					GetOffX="2065.962" GetOffY="287.2975" GetOffZ="97.03133"
				/>
			</If>
		</If>

		<If Condition="LoremasterCheckpointCheck(45, 4892)" > <!-- 41 -->
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Eastern Plaguelands.xml" />
		</If>

		<If Condition="LoremasterCheckpointCheck(47, 4900)" >
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Badlands.xml" />
		</If>

		<If Condition="LoremasterCheckpointCheck(50, 4910)" >
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Searing Gorge.xml" />
		</If>

		<If Condition="LoremasterCheckpointCheck(52, 4901)" >
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Burning Steppes.xml" />
		</If>

		<If Condition="LoremasterCheckpointCheck(55, 4904)" >
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Swamp of Sorrows.xml" />
		</If>

		<If Condition="LoremasterCheckpointCheck(58, 4909)" >
			<Code File="LoadProfile" ProfileName="Eastern Kingdoms\Blasted Lands.xml" />
		</If>

		<Code File="LoadProfile" ProfileName="58-68 Autoloader.xml" />


	</QuestOrder>


</HBProfile>
<HBProfile xsi:noNamespaceSchemaLocation="../../Schemas/QuestProfileSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>Mage - Arcane - Aluneth, Greatstaff of the Magna ($ShortHash$)</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	<AvoidMobs>
	</AvoidMobs>

	<Blackspots>
	</Blackspots>

	<Blacklist>
	</Blacklist>

	<Mailboxes> 
	</Mailboxes>

	<Vendors>
	</Vendors>

	<DefaultNavType>Fly</DefaultNavType>

<!-- INITORDER COMMENT 
	<InitOrder>
		Perhaps add detection for loading the class hall if player hasn't unlocked this zone yet.
		<Code File="Misc\RunLua" Lua="SetCVar('AutoLootDefault', 1)" />

		<Code File="EnablePlugin" Names="Anti Drown" />
		<Code File="EnablePlugin" Names="Refreshment Detection" />

		<Code File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />

		<LootMobs Value="true" />
		<TargetingDistance Value="45" /> Use LevelBot default
	</InitOrder>
END INITORDER COMMENT -->

	<QuestOrder>
		<!-- Check function status -->
		<Code File="RunCode" Type="Definition">
			<![CDATA[
			private static bool? profileFunctionsEnabled => (bool?)AppDomain.CurrentDomain.GetData("QuestingProfiles_FunctionsEnabled");
			private static bool IsStoreProfile(string path) => path.StartsWith("store://");
			private static string Slashify(string path) => IsStoreProfile(path) ? path.Replace(@"\", "/") : path.Replace("/", @"\");

			public __CompiledBatchClass__()
			{
				if (profileFunctionsEnabled == null || profileFunctionsEnabled == false)
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Please stand by as the functions are being activated!");
					LoadProfile(@"..\..\..\Functions\Activate Functions.xml");
				}
			}

			private static void LoadProfile(string path)
			{
				var profile = GetNewPath(path);
				if (!IsStoreProfile(profile) && !File.Exists(profile))
				{
					Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Profile does not exist.\n" + profile);
					return;
				}

				Bots.Professionbuddy.PBLog.Log(Colors.MediumPurple, "[Profile Message!]: ", Colors.Yellow, "Loading: " + profile);
				ProfileManager.LoadNew(profile, false);
			}

			private static string GetNewPath(string path)
			{
				if (IsStoreProfile(path))
					return Slashify(path);

				var currentProfile = ProfileManager.XmlLocation;
				if (IsStoreProfile(currentProfile))
					return Slashify(currentProfile + "/../" + path);

				var absolutePath = Path.Combine(Path.GetDirectoryName(currentProfile), path);
				absolutePath = Path.GetFullPath(absolutePath);
				var canonicalPath = new Uri(absolutePath).LocalPath;
				return Slashify(canonicalPath);
			}]]>
		</Code>
		<!-- END Check function status -->

		<If Condition="Me.IsAlliance" >
			<Code File="LoadProfile" ProfileName="..\..\..\Questing Autoloader.xml" />
		</If>
		<!-- RunCode Methods -->
			<Code File="RunCode">
			<![CDATA[
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.MediumPurple, "> [Profile Initialization Status] ", System.Windows.Media.Colors.CornflowerBlue, "\n     Auto-Looting	:: Enabled\n     Looting	:: Enabled\n     Game Addons	:: Disabled");
				Lua.DoString("SetCVar('AutoLootDefault', 1);");
				Lua.DoString("SetCVar('autoDismountFlying', 1);");
				CharacterSettings.Instance.LootMobs = true;
				CharacterSettings.Instance.Save();
				Logging.Write(System.Windows.Media.Colors.MediumPurple, "> [Ready to bot!]");
			]]>
			</Code>
			<Code File="RunCode" Type="Definition">
				<![CDATA[
						bool DoQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (!HasQuest(questId) && !IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool NeedsBreadcrumbQuest(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (IsQuestCompleted(questId)) return false;
							}
							return true;
						}
						bool QuestDone(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								if (HasQuest(questId) && IsQuestCompleted(questId)) return true;
							}
							return false;
						}
						bool QuestFlaggedCompleted(params uint[] questIds)
						{
							foreach (var questId in questIds)
							{
								return Lua.GetReturnVal<bool>($"return IsQuestFlaggedCompleted({questId});", 0);
							}
							return false;
						}
						async Task SkipCutscene(int preWait = 3000, int postWait = 3000)
						{
					// Add detection of cutscene here.
							await Coroutine.Sleep(preWait);
					// Test and improve the working method.
							Lua.DoString("MovieFrame:StopMovie(); CinematicFrame_CancelCinematic(); StopCinematic();");
							await Coroutine.Sleep(postWait);
						}
					]]>
			</Code>
		<!-- END RunCode Methods -->

		<!-- Get Continuation Quest -->
		<!-- END Get Continuation Quest -->

		<!-- Second Artifact -->
		<!-- END Second Artifact -->

		<!-- Third Artifact -->
		<!-- END Third Artifact -->

		<!-- Story: Artifact Weapon - Aluneth, Greatstaff of the Magna -->
			<!-- NOTE: <Improve...> : This quest line was hard.. even for me playing manually.  Mobs are too strong and there's a lot of mechanics.
									To make this work, we'll need lots of avoids, and lots of DoWhens.
									The bot needs to avoid falling objects, blink over objects, spellsteal spells and somehow support deaths

									Also, be sure the auto pickups work.  GiverName is required, but most of the auto pickups pickup from the LocalPlayer.
			-->
			<PickUp QuestName="Aluneth, Greatstaff of the Magna" QuestId="42001" GiverName="Meryl Felstorm" GiverId="102700" X="-813.277" Y="4697.701" Z="939.775" />
			<If Condition="QuestDone(42001)" >
				<If Condition="Me.MapId == 1513" >  <!-- NOTE: <CheckID> : Leaving Class Hall, entering Dalaran. -->
					<Code File="InteractWith" MobId="244510" WaitTime="3000" X="-832.6424" Y="4685.265" Z="939.9924" />
				</If>
			</If>
			<TurnIn QuestName="Aluneth, Greatstaff of the Magna" QuestId="42001" TurnInName="Archmage Kalec" TurnInId="105081" X="-857.1511" Y="4637.633" Z="749.2795" />

			<PickUp QuestName="A New Threat" QuestId="42006" GiverName="Archmage Kalec" GiverId="105081" X="-857.1511" Y="4637.633" Z="749.2795" />
			<While Condition="DoQuest(42006)" >
				<If Condition="Me.MapId != 571" > <!--x NOTE: <CheckMapId> : This goes to Wyrmrest Temple,  need to ignore it if we're already there. -->
					<If Condition="Me.Z &gt; 605" > <!-- NOTE: <CheckFunction> : Leaving Dalaran, enter Dalaran Portal Room -->
						<MoveTo X="-889.8132" Y="4503.897" Z="580.1462" />
						<Code File="InteractWith" MobId="246013"  X="-892.7344" Y="4506.432" Z="580.4584" />
					</If>
				</If>
				<MoveTo QuestId="42006" QuestObjectiveIndex="2" X="3164.886" Y="464.7257" Z="28.29929" />
				<Code File="InteractWith" MobIds="104551, 104570, 248375" NumOfTimes="3" QuestId="42006" QuestObjectiveIndex="3" X="3128.747" Y="470.8965" Z="21.08807" />
			</While>
			<TurnIn QuestName="A New Threat" QuestId="42006" TurnInName="Ethereal Communication Device" TurnInType="Object" TurnInId="248398" X="2990.309" Y="447.5851" Z="25.10034" />

			<PickUp QuestName="A Forgotten Enemy" QuestId="42007" GiverName="Ethereal Communication Device" GiverId="248398" X="2990.309" Y="447.5851" Z="25.10034" />
			<While Condition="DoQuest(42007)" >
				<Code File="InteractWith" MobId="248476" NonCompeteDistance="0" QuestId="42007" QuestObjectiveIndex="1" X="2990.135" Y="449.8299" Z="25.18106" />
				<Code File="WaitTimer" QuestId="42007" WaitTime="30000" />
			</While>
			<TurnIn QuestName="A Forgotten Enemy" QuestId="42007" />

			<PickUp QuestName="Eyes of the Dragon" QuestId="42008" GiverName="Image of Kalec" />
			<While Condition="DoQuest(42008)" >
				<MoveTo Nav="Fly" QuestId="42008" QuestObjectiveIndex="1" X="3872.739" Y="6914.68" Z="161.2548" />
				<MoveTo Nav="Fly" QuestId="42008" QuestObjectiveIndex="2" X="3834.942" Y="6690.973" Z="264.8541" />
				<MoveTo Nav="Fly" QuestId="42008" QuestObjectiveIndex="3" X="3784.929" Y="6946.786" Z="124.1302" />
			</While>
			<TurnIn QuestName="Eyes of the Dragon" QuestId="42008" />

			<PickUp QuestName="Harnessing the Arcane" QuestId="42009" GiverName="Image of Kalec" />
			<While Condition="DoQuest(42009)" >
				<Code File="Hooks\DoWhen" ActivityName="StealQuickening" LogExecution="false" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(227380)" >
					<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
				</Code>
				<Code File="InteractWith" MobId="106566" PreInteractMountStrategy="Dismount" WaitTime="5000" NumOfTimes="100" QuestId="42009" QuestObjectiveIndex="1"  >
					<HuntingGrounds>
						<Hotspot X="3773.632" Y="6999.09" Z="103.5417" />
						<Hotspot X="3794.961" Y="6919.479" Z="103.9532" />
						<Hotspot X="3912.934" Y="6894.695" Z="104.2659" />
						<Hotspot X="3973.733" Y="6983.582" Z="104.0634" />
						<Hotspot X="3883.298" Y="7071.488" Z="104.9635" />
						<Hotspot X="3797.327" Y="7049.583" Z="103.6634" />
					</HuntingGrounds>
				</Code>
				<Code File="Hooks\DoWhen" ActivityName="StealQuickening" Command="Remove" />
			</While>
			<TurnIn QuestName="Harnessing the Arcane" QuestId="42009" />

			<PickUp QuestName="Arcane Unleashed" QuestId="42010" GiverName="Image of Kalec" />
			<While Condition="DoQuest(42010)" >
				<Code File="Hooks\DoWhen" ActivityName="StealDarkEmpowerment" LogExecution="false" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(209329)" >
					<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
				</Code>
				<Code File="InteractWith" MobId="104828" QuestId="42010" QuestObjectiveIndex="2" X="3761.105" Y="7179.227" Z="165.1684" />
				<Code File="InteractWith" MobId="104819" QuestId="42010" QuestObjectiveIndex="3" X="4113.514" Y="6996.014" Z="168.2267" />
				<Code File="InteractWith" MobId="104826" QuestId="42010" QuestObjectiveIndex="1" X="3828.431" Y="6685.926" Z="156.2073" />
				<Code File="Hooks\DoWhen" ActivityName="StealDarkEmpowerment" Command="Remove" />
			</While>
			<TurnIn QuestName="Arcane Unleashed" QuestId="42010" />

			<PickUp QuestName="The Nexus Vault" QuestId="42011" GiverName="Image of Kalec" />
			<While Condition="DoQuest(42011)" >
				<If Condition="Me.MapId != 1583" >
					<MoveTo X="3891.174" Y="6985.424" Z="69.48839" />
					<Code File="MyCTM" X="3904.694" Y="6985.984" Z="69.48815" TerminateWhen="Me.MapId == 1583" /> <!-- NOTE: <CheckID> : TerminateWhen inside of The Nexus -->
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 1" >
					<Code File="Hooks\DoWhen" ActivityName="StealEmpowerment" LogExecution="false" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(227731)" >
						<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
					</Code>
					<Code File="KillUntilComplete" MobId="106700" X="3848.426" Y="7359.914" Z="266.9356" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 1" />
					<Code File="Hooks\DoWhen" ActivityName="StealEmpowerment" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 2" >
					<Code File="Hooks\DoWhen" ActivityName="BlinkOverUnstableEnergy" LogExecution="false" UseWhen="Me.IsFalling" >
						<!-- IsFalling is a really cheap way of checking if we should blink.  Detecting the actaul AreaTrigger gets messy. -->
						<Code File="RunCode" Code="
								if (SpellManager.HasSpell(1953))
								{
									await Coroutine.Wait(25000, () =&gt; SpellManager.CanCast(1953)); 
									SpellManager.Cast(1953);
								}
								else
								{
									await Coroutine.Wait(25000, () =&gt; SpellManager.CanCast(212653)); 
									SpellManager.Cast(212653);
								}
								await Coroutine.Sleep(750);
						" />
					</Code>
					<Code File="Hooks\DoWhen" ActivityName="StealQuickening" LogExecution="false" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(227380)" >
						<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
					</Code>

					<MoveTo X="4073.614" Y="7454.131" Z="267.3092" />
					<Code File="WaitTimer" WaitTime="45000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 2" />

					<Code File="Hooks\DoWhen" ActivityName="BlinkOverUnstableEnergy" Command="Remove" />
					<Code File="Hooks\DoWhen" ActivityName="StealQuickening" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 3" >
					<Code File="Hooks\DoWhen" ActivityName="StealQuickening" LogExecution="false" AllowUseDuringCombat="true" UseWhen="Me.CurrentTarget != null &amp;&amp; Me.CurrentTarget.HasAura(216908)" >
						<Code File="RunCode" Code="SpellManager.Cast(30449); await Coroutine.Sleep(550);" />
					</Code>
					<!-- NOTE: <AddAvoid> : Boss shoots out a frontal attack, it may need to be avoided - low priority. -->
					<Code File="KillUntilComplete" MobId="106706" X="4067.734" Y="7453.73" Z="267.3114" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 3" />
					<Code File="Hooks\DoWhen" ActivityName="StealQuickening" Command="Remove" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 4" >
					<MoveTo X="4199.186" Y="7416.543" Z="262.6368" />
					<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 4" />
				</If>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 5" >
					<Code File="WaitTimer" WaitTime="3000" />
					<Code File="InteractWith" MobId="104546" IgnoreLoSToTarget="true" InteractBlacklistTimeInSeconds="1" X="4198.118" Y="7414.225" Z="262.6375" />
					<Code File="WaitTimer" WaitTime="25000" />
					<Code File="KillUntilComplete" MobId="106708" X="4211.827" Y="7105.71" Z="268.244" TerminateWhen="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber != 5" />
				</If>

				<While Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 6" >
					<Code File="InteractWith" MobId="248553" X="4210.876" Y="7089.679" Z="267.5377" TerminateWhen="Me.Z &gt;= 300" /> <!-- NOTE: <CheckZoneId> : May need to check zone Id here. -->
					<DisableBehavior Name="Pull" />

					<Code File="Hooks\Avoid" AvoidName="AlunethDamage" Radius="21" ObjectId="106756" ObjectType="Npc" />
					<If Condition="!IsScenarioCriteriaComplete(3) &amp;&amp; Me.Z &gt;= 300" >
						<MoveTo Precision="1" X="1156.599" Y="1056.209" Z="308.2923" />
						<Code File="MyCTM" X="1156.599" Y="1056.209" Z="308.2923" />
						<Code File="WaitTimer" WaitTime="1500" />
						<Code File="Misc\RunLua" Lua="ExtraActionButton1:Click()" />
						<Code File="WaitTimer" WaitTime="5125" />
					</If>

					<If Condition="!IsScenarioCriteriaComplete(2) &amp;&amp; Me.Z &gt;= 300" >
						<MoveTo Precision="1" X="1098.997" Y="1013.372" Z="308.2924" />
						<Code File="MyCTM" X="1098.997" Y="1013.372" Z="308.2924" />
						<Code File="WaitTimer" WaitTime="1500" />
						<Code File="Misc\RunLua" Lua="ExtraActionButton1:Click()" />
						<Code File="WaitTimer" WaitTime="5125" />
					</If>

					<If Condition="!IsScenarioCriteriaComplete(1) &amp;&amp; Me.Z &gt;= 300" >
						<MoveTo Precision="1" X="1094.078" Y="1078.445" Z="308.292" />
						<Code File="MyCTM" X="1094.078" Y="1078.445" Z="308.292" />
						<Code File="WaitTimer" WaitTime="1500" />
						<Code File="Misc\RunLua" Lua="ExtraActionButton1:Click()" />
						<Code File="WaitTimer" WaitTime="5125" />
					</If>

					<Code File="Hooks\Avoid" AvoidName="AlunethDamage" Command="Remove" />

					<EnableBehavior Name="Pull" />
				</While>

				<If Condition="Bots.DungeonBuddy.Helpers.ScenarioInfo.Current.CurrentStageNumber == 7" >
					<If Condition="!IsScenarioCriteriaComplete(1)" >
						<MoveTo Precision="1" X="1108.43" Y="1059.804" Z="307.2284" />
						<Code File="MyCTM" X="1117.78" Y="1048.028" Z="311.1012" />
						<Code File="InteractWith" MobId="249814" InteractByLooting="true" WaitTime="1500" X="1117.78" Y="1048.028" Z="311.1012" />
						<Code File="Misc\RunLua" Lua="LootButton1:Click();" /> <!-- Extra code in case the IW doesn't loot. -->
						<Code File="WaitTimer" WaitTime="10000" /> <!-- Wait for little cinematic. -->
						<If Condition="HasItem(127857)" >
							<Code File="MyCTM" X="1137.779" Y="1021.658" Z="308.292" />
							<Code File="InteractWith" MobId="248574" X="1152.585" Y="1002.016" Z="309.2886" />
						</If>
					</If>
				</If>
			</While>
			<If Condition="QuestDone(42011) &amp;&amp; Me.MapId == 1583" >
				<MoveTo X="4210.852" Y="7102.874" Z="268.2" />
				<Code File="WaitTimer" WaitTime="50000" TerminateWhen="Object(244510) != null" />
				<Code File="InteractWith" MobId="244510" WaitTime="3000" X="4210.98" Y="7105.491" Z="268.1987" TerminateWhen="Me.MapId != 1583" />
			</If>
			<TurnIn QuestName="The Nexus Vault" QuestId="42011" TurnInName="Archmage Kalec" TurnInId="105081" X="-857.1511" Y="4637.633" Z="749.2796" />
		<!-- END Story: Artifact Weapon - Aluneth, Greatstaff of the Magna -->


		<If Condition="!IsQuestCompleted(41125)" >
			<Code File="WaitTimer" WaitTime="5000" /> <!-- Give some time to allow for the auto pickup to appear -->
			<PickUp QuestName="The Champion's Return" QuestId="41114" GiverName="Meryl Felstorm" /> <!-- Auto Pickup -->
			<While Condition="DoQuest(41114)" >
				<Code File="RunCode" Code="SpellManager.Cast(193759);" />
				<Code File="WaitTimer" WaitTime="10000" TerminateWhen="!Me.IsCasting" />
			</While>
			<TurnIn QuestName="The Champion's Return" QuestId="41114" TurnInName="Meryl Felstorm" TurnInId="102700" X="-798.9618" Y="4702.451" Z="939.9673" />

			<PickUp QuestName="Unlocked Potential" QuestId="41125" GiverName="Meryl Felstorm" GiverId="102700" X="-798.9618" Y="4702.451" Z="939.9673" />
			<!-- We're picking this quest up even though it's not artifact specific as a method of preventing the Class Hall loader from loading another artifact profile. -->
			<Code File="LoadProfile" ProfileName="../Class Hall Loaders/Mage.xml" />
		</If>

	</QuestOrder>
</HBProfile>

<!-- Notes:

	XXXX is used to determine if we've got the first artifact or not because NPC positions change after this quest.
	Checking if this quest is completed can be used to determine where the NPCs are at for the bot and where we should look for them.
	XXXX is completed directly after completing obtaining your first artifact weapon, so it should be reliable enough to check with.

	Contiuing the Legend is the quest to unlock your second artifact choice.

	One Last Adventure is the quest to unlock your third artifact choice.
-->